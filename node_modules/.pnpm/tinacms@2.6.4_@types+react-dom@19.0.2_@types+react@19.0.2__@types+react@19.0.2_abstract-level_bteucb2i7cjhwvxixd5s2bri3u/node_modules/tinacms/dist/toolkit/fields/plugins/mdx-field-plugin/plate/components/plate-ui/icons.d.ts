import React from 'react';
import { type LucideProps } from 'lucide-react';
import type { LucideIcon } from 'lucide-react';
export type Icon = LucideIcon;
export declare const iconVariants: (props?: {
    variant?: "toolbar" | "menuItem";
    size?: "sm" | "md";
} & import("class-variance-authority/dist/types").ClassProp) => string;
export declare const DoubleColumnOutlined: (props: LucideProps) => React.JSX.Element;
export declare const ThreeColumnOutlined: (props: LucideProps) => React.JSX.Element;
export declare const RightSideDoubleColumnOutlined: (props: LucideProps) => React.JSX.Element;
export declare const LeftSideDoubleColumnOutlined: (props: LucideProps) => React.JSX.Element;
export declare const DoubleSideDoubleColumnOutlined: (props: LucideProps) => React.JSX.Element;
export declare const Overflow: (props: any) => React.JSX.Element;
export declare const Icons: {
    add: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    alignCenter: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    alignJustify: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    alignLeft: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    alignRight: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    arrowDown: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    bg: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    blockquote: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    overflow: (props: any) => React.JSX.Element;
    borderAll: (props: LucideProps) => React.JSX.Element;
    borderBottom: (props: LucideProps) => React.JSX.Element;
    borderLeft: (props: LucideProps) => React.JSX.Element;
    borderNone: (props: LucideProps) => React.JSX.Element;
    borderRight: (props: LucideProps) => React.JSX.Element;
    borderTop: (props: LucideProps) => React.JSX.Element;
    check: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    chevronRight: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    chevronsUpDown: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    clear: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    close: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    paint: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    codeblock: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    color: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    column: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    combine: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    ungroup: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    comment: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    commentAdd: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    delete: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    dragHandle: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    editing: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    emoji: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    externalLink: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h1: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h2: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h3: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h4: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h5: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    h6: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    indent: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    kbd: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    lineHeight: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    minus: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    mermaid: () => React.JSX.Element;
    more: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    outdent: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    paragraph: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    refresh: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    row: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    search: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    settings: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    strikethrough: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    subscript: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    superscript: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    table: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    text: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    trash: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    underline: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    unlink: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    viewing: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    doubleColumn: (props: LucideProps) => React.JSX.Element;
    doubleSideDoubleColumn: (props: LucideProps) => React.JSX.Element;
    threeColumn: (props: LucideProps) => React.JSX.Element;
    leftSideDoubleColumn: (props: LucideProps) => React.JSX.Element;
    rightSideDoubleColumn: (props: LucideProps) => React.JSX.Element;
    heading: typeof HeadingIcon;
    link: typeof LinkIcon;
    quote: typeof QuoteIcon;
    image: typeof ImageIcon;
    ul: typeof UnorderedListIcon;
    ol: typeof OrderedListIcon;
    code: typeof CodeIcon;
    codeBlock: typeof CodeBlockIcon;
    bold: typeof BoldIcon;
    italic: typeof ItalicIcon;
    raw: () => React.JSX.Element;
    gitHub: (props: LucideProps) => React.JSX.Element;
    logo: (props: LucideProps) => React.JSX.Element;
    moon: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    sun: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
    twitter: React.ForwardRefExoticComponent<Omit<LucideProps, "ref"> & React.RefAttributes<SVGSVGElement>>;
};
export declare const EllipsisIcon: ({ title }: {
    title: any;
}) => React.JSX.Element;
export declare function UnorderedListIcon(props: any): React.JSX.Element;
export declare function HeadingIcon(props: any): React.JSX.Element;
export declare function OrderedListIcon(props: any): React.JSX.Element;
export declare function QuoteIcon(props: any): React.JSX.Element;
export declare function LinkIcon(props: any): React.JSX.Element;
export declare function CodeIcon(props: any): React.JSX.Element;
export declare function CodeBlockIcon(props: any): React.JSX.Element;
export declare function ImageIcon(props: any): React.JSX.Element;
export declare function BoldIcon(props: any): React.JSX.Element;
export declare function ItalicIcon(props: any): React.JSX.Element;
export declare function UnderlineIcon(props: any): React.JSX.Element;
export declare function StrikethroughIcon(props: any): React.JSX.Element;
export declare function LightningIcon(props: any): React.JSX.Element;
export declare function ArrowDownIcon(props: any): React.JSX.Element;
export declare function PlusIcon({ className }: {
    className?: string;
}): React.JSX.Element;
