import React from 'react';
import type { PlateContentProps } from '@udecode/plate-common';
import type { VariantProps } from 'class-variance-authority';
declare const editorVariants: (props?: {
    disabled?: boolean;
    focusRing?: boolean;
    focused?: boolean;
    size?: "sm" | "md";
    variant?: "ghost" | "outline";
} & import("class-variance-authority/dist/types").ClassProp) => string;
export type EditorProps = PlateContentProps & VariantProps<typeof editorVariants>;
declare const Editor: React.ForwardRefExoticComponent<{
    renderEditable?: (editable: React.ReactElement) => React.ReactNode;
} & {
    decorate?: (entry: import("@udecode/plate-common").TNodeEntry) => import("slate").Range[];
    renderElement?: import("@udecode/plate-common").RenderElementFn;
    renderLeaf?: import("@udecode/plate-common").RenderLeafFn;
} & Omit<import("slate-react/dist/components/editable").EditableProps, "decorate" | "renderElement" | "renderLeaf"> & VariantProps<(props?: {
    disabled?: boolean;
    focusRing?: boolean;
    focused?: boolean;
    size?: "sm" | "md";
    variant?: "ghost" | "outline";
} & import("class-variance-authority/dist/types").ClassProp) => string> & React.RefAttributes<HTMLDivElement>>;
export { Editor };
