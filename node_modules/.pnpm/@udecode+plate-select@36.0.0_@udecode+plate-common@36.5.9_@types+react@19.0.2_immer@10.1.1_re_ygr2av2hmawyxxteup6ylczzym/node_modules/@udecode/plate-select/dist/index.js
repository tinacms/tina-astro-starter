"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  KEY_DELETE: () => KEY_DELETE,
  KEY_SELECT_ON_BACKSPACE: () => KEY_SELECT_ON_BACKSPACE,
  createDeletePlugin: () => createDeletePlugin,
  createSelectOnBackspacePlugin: () => createSelectOnBackspacePlugin,
  withDelete: () => withDelete,
  withSelectOnBackspace: () => withSelectOnBackspace
});
module.exports = __toCommonJS(src_exports);

// src/createDeletePlugin.ts
var import_server2 = require("@udecode/plate-common/server");

// src/withDelete.ts
var import_server = require("@udecode/plate-common/server");
var withDelete = (editor, { options: { query } }) => {
  const { deleteForward } = editor;
  editor.deleteForward = (unit) => {
    if (!editor.selection)
      return;
    const isValidNode = !query || (0, import_server.queryNode)((0, import_server.getAboveNode)(editor), query);
    if (!(0, import_server.isSelectionExpanded)(editor) && (0, import_server.isBlockAboveEmpty)(editor) && isValidNode) {
      (0, import_server.removeNodes)(editor);
    } else {
      deleteForward(unit);
    }
  };
  return editor;
};

// src/createDeletePlugin.ts
var KEY_DELETE = "delete";
var createDeletePlugin = (0, import_server2.createPluginFactory)({
  key: KEY_DELETE,
  options: {
    query: {
      allow: [import_server2.ELEMENT_DEFAULT]
    }
  },
  withOverrides: withDelete
});

// src/createSelectOnBackspacePlugin.ts
var import_server4 = require("@udecode/plate-common/server");

// src/withSelectOnBackspace.ts
var import_server3 = require("@udecode/plate-common/server");
var withSelectOnBackspace = (editor, {
  options: { query, removeNodeIfEmpty }
}) => {
  const { deleteBackward } = editor;
  editor.deleteBackward = (unit) => {
    const { selection } = editor;
    if (unit === "character" && (0, import_server3.isCollapsed)(selection)) {
      const pointBefore = (0, import_server3.getPointBefore)(editor, selection, {
        unit
      });
      if (pointBefore) {
        const [prevCell] = (0, import_server3.getNodeEntries)(editor, {
          at: pointBefore,
          match: (node) => (0, import_server3.queryNode)([node, pointBefore.path], query)
        });
        if (!!prevCell && pointBefore) {
          const point = (0, import_server3.getPoint)(editor, selection);
          const selectedNode = (0, import_server3.getNode)(editor, point.path);
          if (removeNodeIfEmpty && selectedNode && !(0, import_server3.getNodeString)(selectedNode)) {
            (0, import_server3.removeNodes)(editor);
          }
          (0, import_server3.select)(editor, pointBefore);
        } else {
          deleteBackward(unit);
        }
      } else {
        deleteBackward(unit);
      }
    } else {
      deleteBackward(unit);
    }
  };
  return editor;
};

// src/createSelectOnBackspacePlugin.ts
var KEY_SELECT_ON_BACKSPACE = "selectOnBackspace";
var createSelectOnBackspacePlugin = (0, import_server4.createPluginFactory)({
  key: KEY_SELECT_ON_BACKSPACE,
  options: {
    removeNodeIfEmpty: false
  },
  withOverrides: withSelectOnBackspace
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  KEY_DELETE,
  KEY_SELECT_ON_BACKSPACE,
  createDeletePlugin,
  createSelectOnBackspacePlugin,
  withDelete,
  withSelectOnBackspace
});
//# sourceMappingURL=index.js.map