import * as _udecode_plate_common_server from '@udecode/plate-common/server';
import { QueryNodeOptions, Value, PlateEditor, WithPlatePlugin } from '@udecode/plate-common/server';
import * as _udecode_slate from '@udecode/slate';

type DeletePlugin = {
    query?: QueryNodeOptions;
};
declare const KEY_DELETE = "delete";
/** @see {@link withDelete} */
declare const createDeletePlugin: <OP = DeletePlugin, OV extends _udecode_slate.Value = _udecode_slate.Value, OE extends _udecode_plate_common_server.PlateEditor<OV> = _udecode_plate_common_server.PlateEditor<OV>>(override?: Partial<_udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: _udecode_plate_common_server.OverrideByKey<OV, OE> | undefined) => _udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>;

type SelectOnBackspacePlugin = {
    query?: QueryNodeOptions;
    removeNodeIfEmpty?: boolean;
};
declare const KEY_SELECT_ON_BACKSPACE = "selectOnBackspace";
/** @see {@link withSelectOnBackspace} */
declare const createSelectOnBackspacePlugin: <OP = SelectOnBackspacePlugin, OV extends _udecode_slate.Value = _udecode_slate.Value, OE extends _udecode_plate_common_server.PlateEditor<OV> = _udecode_plate_common_server.PlateEditor<OV>>(override?: Partial<_udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: _udecode_plate_common_server.OverrideByKey<OV, OE> | undefined) => _udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>;

/** Set a list of element types to select on backspace */
declare const withDelete: <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(editor: E, { options: { query } }: WithPlatePlugin<DeletePlugin, V, E>) => E;

/** Set a list of element types to select on backspace */
declare const withSelectOnBackspace: <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(editor: E, { options: { query, removeNodeIfEmpty }, }: WithPlatePlugin<SelectOnBackspacePlugin, V, E>) => E;

export { type DeletePlugin, KEY_DELETE, KEY_SELECT_ON_BACKSPACE, type SelectOnBackspacePlugin, createDeletePlugin, createSelectOnBackspacePlugin, withDelete, withSelectOnBackspace };
