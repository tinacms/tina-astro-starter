{"version":3,"sources":["../src/createBlockquotePlugin.ts","../src/withBlockquote.ts"],"sourcesContent":["import {\n  type HotkeyPlugin,\n  createPluginFactory,\n  onKeyDownToggleElement,\n} from '@udecode/plate-common/server';\n\nimport { withBlockquote } from './withBlockquote';\n\nexport const ELEMENT_BLOCKQUOTE = 'blockquote';\n\n/** Enables support for block quotes, useful for quotations and passages. */\nexport const createBlockquotePlugin = createPluginFactory<HotkeyPlugin>({\n  deserializeHtml: {\n    rules: [\n      {\n        validNodeName: 'BLOCKQUOTE',\n      },\n    ],\n  },\n  handlers: {\n    onKeyDown: onKeyDownToggleElement,\n  },\n  isElement: true,\n  key: ELEMENT_BLOCKQUOTE,\n  options: {\n    hotkey: 'mod+shift+.',\n  },\n  withOverrides: withBlockquote,\n});\n","import type {\n  PlateEditor,\n  TElement,\n  Value,\n} from '@udecode/plate-common/server';\n\nimport { ELEMENT_BLOCKQUOTE } from './createBlockquotePlugin';\n\nexport const withBlockquote = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E\n) => {\n  const { shouldMergeNodesRemovePrevNode } = editor;\n\n  if (shouldMergeNodesRemovePrevNode) {\n    editor.shouldMergeNodesRemovePrevNode = (prevNodeEntry, curNodeEntry) => {\n      const prevNode = prevNodeEntry[0] as TElement;\n\n      if (prevNode.type === ELEMENT_BLOCKQUOTE) return false;\n\n      return shouldMergeNodesRemovePrevNode(prevNodeEntry, curNodeEntry);\n    };\n  }\n\n  return editor;\n};\n"],"mappings":";AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;;;ACIA,IAAM,iBAAiB,CAI5B,WACG;AACH,QAAM,EAAE,+BAA+B,IAAI;AAE3C,MAAI,gCAAgC;AAClC,WAAO,iCAAiC,CAAC,eAAe,iBAAiB;AACvE,YAAM,WAAW,cAAc,CAAC;AAEhC,UAAI,SAAS,SAAS;AAAoB,eAAO;AAEjD,aAAO,+BAA+B,eAAe,YAAY;AAAA,IACnE;AAAA,EACF;AAEA,SAAO;AACT;;;ADnBO,IAAM,qBAAqB;AAG3B,IAAM,yBAAyB,oBAAkC;AAAA,EACtE,iBAAiB;AAAA,IACf,OAAO;AAAA,MACL;AAAA,QACE,eAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA,EACA,UAAU;AAAA,IACR,WAAW;AAAA,EACb;AAAA,EACA,WAAW;AAAA,EACX,KAAK;AAAA,EACL,SAAS;AAAA,IACP,QAAQ;AAAA,EACV;AAAA,EACA,eAAe;AACjB,CAAC;","names":[]}