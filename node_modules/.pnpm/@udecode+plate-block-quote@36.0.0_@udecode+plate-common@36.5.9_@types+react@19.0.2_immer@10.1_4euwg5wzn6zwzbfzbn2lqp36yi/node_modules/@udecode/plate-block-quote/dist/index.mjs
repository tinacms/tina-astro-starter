// src/createBlockquotePlugin.ts
import {
  createPluginFactory,
  onKeyDownToggleElement
} from "@udecode/plate-common/server";

// src/withBlockquote.ts
var withBlockquote = (editor) => {
  const { shouldMergeNodesRemovePrevNode } = editor;
  if (shouldMergeNodesRemovePrevNode) {
    editor.shouldMergeNodesRemovePrevNode = (prevNodeEntry, curNodeEntry) => {
      const prevNode = prevNodeEntry[0];
      if (prevNode.type === ELEMENT_BLOCKQUOTE)
        return false;
      return shouldMergeNodesRemovePrevNode(prevNodeEntry, curNodeEntry);
    };
  }
  return editor;
};

// src/createBlockquotePlugin.ts
var ELEMENT_BLOCKQUOTE = "blockquote";
var createBlockquotePlugin = createPluginFactory({
  deserializeHtml: {
    rules: [
      {
        validNodeName: "BLOCKQUOTE"
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleElement
  },
  isElement: true,
  key: ELEMENT_BLOCKQUOTE,
  options: {
    hotkey: "mod+shift+."
  },
  withOverrides: withBlockquote
});
export {
  ELEMENT_BLOCKQUOTE,
  createBlockquotePlugin,
  withBlockquote
};
//# sourceMappingURL=index.mjs.map