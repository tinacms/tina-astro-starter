{"version":3,"sources":["../src/index.tsx","../src/cn.ts","../src/withProps.tsx","../src/withCn.tsx","../src/withVariants.tsx"],"sourcesContent":["/** @file Automatically generated by barrelsby. */\n\nexport * from './cn';\nexport * from './withCn';\nexport * from './withProps';\nexport * from './withVariants';\nexport * from '@udecode/react-utils';\n","import type { CxOptions } from 'class-variance-authority';\n\nimport { cx } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\n\n/** Tailwind CSS classnames merge. */\nexport function cn(...inputs: CxOptions) {\n  return twMerge(cx(inputs));\n}\n","import React from 'react';\n\nimport { cn } from './cn';\n\n/**\n * Set default props with `React.forwardRef`.\n *\n * - Use `withCn` if only setting `className`\n */\nexport function withProps<\n  T extends React.ComponentType<any> | keyof HTMLElementTagNameMap,\n>(Component: T, defaultProps: Partial<React.ComponentPropsWithoutRef<T>>) {\n  const ComponentWithClassName = Component as React.FC<{ className: string }>;\n\n  return React.forwardRef<\n    React.ElementRef<T>,\n    React.ComponentPropsWithoutRef<T>\n  >(function ExtendComponent(props, ref) {\n    return (\n      <ComponentWithClassName\n        ref={ref}\n        {...defaultProps}\n        {...props}\n        className={cn(\n          (defaultProps as any).className,\n          (props as any).className\n        )}\n      />\n    );\n  });\n}\n","import type React from 'react';\n\nimport type { CxOptions } from 'class-variance-authority';\n\nimport { cn } from './cn';\nimport { withProps } from './withProps';\n\n/**\n * Set default `className` with `cn`.\n *\n * - IntelliSense: add `withCn` to `classAttributes`\n * - ESLint: add `withCn` to `settings.tailwindcss.callees`\n */\nexport function withCn<T extends React.ComponentType<any>>(\n  Component: T,\n  ...inputs: CxOptions\n) {\n  return withProps(Component, { className: cn(inputs) } as any);\n}\n","import React from 'react';\n\nimport type { VariantProps, cva } from 'class-variance-authority';\n\nimport { cn } from './cn';\n\n/**\n * Set default `className` with `cn` and `variants`.\n *\n * @param Component - The component to which props will be added.\n * @param variants - Variants from `cva`. `Component` props will be extended\n *   with `variants` props.\n * @param onlyVariantsProps - Props to exclude from `Component`. Set the props\n *   that are only used for variants.\n */\nexport function withVariants<\n  T extends React.ComponentType<any> | keyof HTMLElementTagNameMap,\n  V extends ReturnType<typeof cva>,\n>(Component: T, variants: V, onlyVariantsProps?: (keyof VariantProps<V>)[]) {\n  const ComponentWithClassName = Component as React.FC<{ className: string }>;\n\n  return React.forwardRef<\n    React.ElementRef<T>,\n    React.ComponentPropsWithoutRef<T> & VariantProps<V>\n  >(function ExtendComponent(allProps, ref) {\n    const { className, ...props } = allProps as any;\n    const rest = { ...props };\n\n    if (onlyVariantsProps) {\n      onlyVariantsProps.forEach((key) => {\n        if (props[key as string] !== undefined) {\n          delete rest[key as string];\n        }\n      });\n    }\n\n    return (\n      <ComponentWithClassName\n        className={cn(variants(props), className)}\n        ref={ref}\n        {...(rest as any)}\n      />\n    );\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEA,sCAAmB;AACnB,4BAAwB;AAGjB,SAAS,MAAM,QAAmB;AACvC,aAAO,mCAAQ,oCAAG,MAAM,CAAC;AAC3B;;;ACRA,mBAAkB;AASX,SAAS,UAEd,WAAc,cAA0D;AACxE,QAAM,yBAAyB;AAE/B,SAAO,aAAAA,QAAM,WAGX,SAAS,gBAAgB,OAAO,KAAK;AACrC,WACE,6BAAAA,QAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,SACI,eACA,QAHL;AAAA,QAIC,WAAW;AAAA,UACR,aAAqB;AAAA,UACrB,MAAc;AAAA,QACjB;AAAA;AAAA,IACF;AAAA,EAEJ,CAAC;AACH;;;ACjBO,SAAS,OACd,cACG,QACH;AACA,SAAO,UAAU,WAAW,EAAE,WAAW,GAAG,MAAM,EAAE,CAAQ;AAC9D;;;AClBA,IAAAC,gBAAkB;AAeX,SAAS,aAGd,WAAc,UAAa,mBAA+C;AAC1E,QAAM,yBAAyB;AAE/B,SAAO,cAAAC,QAAM,WAGX,SAAS,gBAAgB,UAAU,KAAK;AACxC,UAAgC,eAAxB,YAzBZ,IAyBoC,IAAV,kBAAU,IAAV,CAAd;AACR,UAAM,OAAO,mBAAK;AAElB,QAAI,mBAAmB;AACrB,wBAAkB,QAAQ,CAAC,QAAQ;AACjC,YAAI,MAAM,GAAa,MAAM,QAAW;AACtC,iBAAO,KAAK,GAAa;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WACE,8BAAAA,QAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,GAAG,SAAS,KAAK,GAAG,SAAS;AAAA,QACxC;AAAA,SACK;AAAA,IACP;AAAA,EAEJ,CAAC;AACH;;;AJtCA,wBAAc,iCANd;","names":["React","import_react","React"]}