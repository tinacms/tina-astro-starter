{"version":3,"sources":["../src/createTrailingBlockPlugin.ts","../src/withTrailingBlock.ts"],"sourcesContent":["import {\n  ELEMENT_DEFAULT,\n  type QueryNodeOptions,\n  createPluginFactory,\n  getPluginType,\n} from '@udecode/plate-common/server';\n\nimport { withTrailingBlock } from './withTrailingBlock';\n\nexport interface TrailingBlockPlugin extends QueryNodeOptions {\n  /** Level where the trailing node should be, the first level being 0. */\n  level?: number;\n\n  /** Type of the trailing block */\n  type?: string;\n}\n\nexport const KEY_TRAILING_BLOCK = 'trailingBlock';\n\n/** @see {@link withTrailingBlock} */\nexport const createTrailingBlockPlugin =\n  createPluginFactory<TrailingBlockPlugin>({\n    key: KEY_TRAILING_BLOCK,\n    options: {\n      level: 0,\n    },\n    then: (editor) => ({\n      type: getPluginType(editor, ELEMENT_DEFAULT),\n    }),\n    withOverrides: withTrailingBlock,\n  });\n","import {\n  ELEMENT_DEFAULT,\n  type PlateEditor,\n  type Value,\n  type WithPlatePlugin,\n  getLastNodeByLevel,\n  getPluginType,\n  insertElements,\n  queryNode,\n} from '@udecode/plate-common/server';\nimport { Path } from 'slate';\n\nimport type { TrailingBlockPlugin } from './createTrailingBlockPlugin';\n\n/**\n * Add a trailing block when the last node type is not `type` and when the\n * editor has .\n */\nexport const withTrailingBlock = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  {\n    options: { level, type = getPluginType(editor, ELEMENT_DEFAULT), ...query },\n  }: WithPlatePlugin<TrailingBlockPlugin, V, E>\n) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = ([currentNode, currentPath]) => {\n    if (currentPath.length === 0) {\n      const lastChild = getLastNodeByLevel(editor, level!);\n\n      const lastChildNode = lastChild?.[0];\n\n      if (\n        !lastChildNode ||\n        (lastChildNode.type !== type && queryNode(lastChild, query))\n      ) {\n        const at = lastChild ? Path.next(lastChild[1]) : [0];\n\n        insertElements(editor, editor.blockFactory({ type }, at), { at });\n\n        return;\n      }\n    }\n\n    return normalizeNode([currentNode, currentPath]);\n  };\n\n  return editor;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA,EACE,mBAAAA;AAAA,EAEA;AAAA,EACA,iBAAAC;AAAA,OACK;;;ACLP;AAAA,EACE;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,YAAY;AAQd,IAAM,oBAAoB,CAI/B,QACA,OAGG;AAHH,MACW;AAAA,IAAT,SAAS;AAAA,EAxBb,IAuBE,IACW,SAAE,SAAO,OAAO,cAAc,QAAQ,eAAe,EAxBlE,IAwBa,IAA2D,kBAA3D,IAA2D,CAAzD,SAAO;AAGpB,QAAM,EAAE,cAAc,IAAI;AAE1B,SAAO,gBAAgB,CAAC,CAAC,aAAa,WAAW,MAAM;AACrD,QAAI,YAAY,WAAW,GAAG;AAC5B,YAAM,YAAY,mBAAmB,QAAQ,KAAM;AAEnD,YAAM,gBAAgB,uCAAY;AAElC,UACE,CAAC,iBACA,cAAc,SAAS,QAAQ,UAAU,WAAW,KAAK,GAC1D;AACA,cAAM,KAAK,YAAY,KAAK,KAAK,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;AAEnD,uBAAe,QAAQ,OAAO,aAAa,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAEhE;AAAA,MACF;AAAA,IACF;AAEA,WAAO,cAAc,CAAC,aAAa,WAAW,CAAC;AAAA,EACjD;AAEA,SAAO;AACT;;;ADlCO,IAAM,qBAAqB;AAG3B,IAAM,4BACX,oBAAyC;AAAA,EACvC,KAAK;AAAA,EACL,SAAS;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA,MAAM,CAAC,YAAY;AAAA,IACjB,MAAMC,eAAc,QAAQC,gBAAe;AAAA,EAC7C;AAAA,EACA,eAAe;AACjB,CAAC;","names":["ELEMENT_DEFAULT","getPluginType","getPluginType","ELEMENT_DEFAULT"]}