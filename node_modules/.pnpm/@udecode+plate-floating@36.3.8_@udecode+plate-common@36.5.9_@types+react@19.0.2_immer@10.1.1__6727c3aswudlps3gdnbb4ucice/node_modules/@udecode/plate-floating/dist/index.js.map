{"version":3,"sources":["../src/index.ts","../src/createVirtualElement.ts","../src/hooks/useFloatingToolbar.ts","../src/hooks/useVirtualFloating.ts","../src/libs/floating-ui.ts","../src/utils/getBoundingClientRect.ts","../src/utils/makeClientRect.ts","../src/utils/mergeClientRects.ts","../src/utils/createVirtualRef.ts","../src/utils/getRangeBoundingClientRect.ts","../src/utils/getSelectionBoundingClientRect.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './createVirtualElement';\nexport * from './hooks/index';\nexport * from './libs/index';\nexport * from './utils/index';\n","import type { ClientRectObject } from '@floating-ui/core';\nimport type { VirtualElement } from '@floating-ui/react';\n\nexport const getDefaultBoundingClientRect = (): ClientRectObject => ({\n  bottom: 9999,\n  height: 0,\n  left: -9999,\n  right: 9999,\n  top: -9999,\n  width: 0,\n  x: 0,\n  y: 0,\n});\n\nexport const createVirtualElement = (): VirtualElement => ({\n  getBoundingClientRect: getDefaultBoundingClientRect,\n});\n","import React from 'react';\n\nimport { useEditorSelector } from '@udecode/plate-common';\nimport {\n  getSelectionText,\n  isSelectionExpanded,\n  mergeProps,\n} from '@udecode/plate-common/server';\nimport { useFocused } from 'slate-react';\n\nimport {\n  type UseVirtualFloatingOptions,\n  getSelectionBoundingClientRect,\n  useVirtualFloating,\n} from '..';\n\nexport type FloatingToolbarState = {\n  floatingOptions?: UseVirtualFloatingOptions;\n  hideToolbar?: boolean;\n  ignoreReadOnly?: boolean;\n};\n\nexport const useFloatingToolbarState = ({\n  editorId,\n  floatingOptions,\n  focusedEditorId,\n  hideToolbar,\n  ignoreReadOnly,\n}: {\n  editorId: string;\n  focusedEditorId: null | string;\n} & FloatingToolbarState) => {\n  const selectionExpanded = useEditorSelector(isSelectionExpanded, []);\n  const selectionText = useEditorSelector(getSelectionText, []);\n\n  const focused = useFocused();\n\n  const [open, setOpen] = React.useState(false);\n  const [waitForCollapsedSelection, setWaitForCollapsedSelection] =\n    React.useState(false);\n  const [mousedown, setMousedown] = React.useState(false);\n\n  const floating = useVirtualFloating(\n    mergeProps(\n      {\n        getBoundingClientRect: getSelectionBoundingClientRect,\n        onOpenChange: setOpen,\n        open,\n      },\n      floatingOptions\n    )\n  );\n\n  return {\n    editorId,\n    floating,\n    focused,\n    focusedEditorId,\n    hideToolbar,\n    ignoreReadOnly,\n    mousedown,\n    open,\n    selectionExpanded,\n    selectionText,\n    setMousedown,\n    setOpen,\n    setWaitForCollapsedSelection,\n    waitForCollapsedSelection,\n  };\n};\n\nexport const useFloatingToolbar = ({\n  editorId,\n  floating,\n  focusedEditorId,\n  hideToolbar,\n  ignoreReadOnly,\n  mousedown,\n  open,\n  selectionExpanded,\n  selectionText,\n  setMousedown,\n  setOpen,\n  setWaitForCollapsedSelection,\n  waitForCollapsedSelection,\n}: ReturnType<typeof useFloatingToolbarState>) => {\n  // On refocus, the editor keeps the previous selection,\n  // so we need to wait it's collapsed at the new position before displaying the floating toolbar.\n  React.useEffect(() => {\n    if (!(editorId === focusedEditorId) || ignoreReadOnly) {\n      setWaitForCollapsedSelection(true);\n    }\n    if (!selectionExpanded) {\n      setWaitForCollapsedSelection(false);\n    }\n  }, [\n    editorId,\n    focusedEditorId,\n    ignoreReadOnly,\n    selectionExpanded,\n    setWaitForCollapsedSelection,\n  ]);\n\n  React.useEffect(() => {\n    const mouseup = () => setMousedown(false);\n    const mousedown = () => setMousedown(true);\n\n    document.addEventListener('mouseup', mouseup);\n\n    document.addEventListener('mousedown', mousedown);\n\n    return () => {\n      document.removeEventListener('mouseup', mouseup);\n      document.removeEventListener('mousedown', mousedown);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      !selectionExpanded ||\n      !selectionText ||\n      (mousedown && !open) ||\n      hideToolbar\n    ) {\n      setOpen(false);\n    } else if (\n      selectionText &&\n      selectionExpanded &&\n      !waitForCollapsedSelection\n    ) {\n      setOpen(true);\n    }\n  }, [\n    setOpen,\n    editorId,\n    focusedEditorId,\n    hideToolbar,\n    ignoreReadOnly,\n    selectionExpanded,\n    selectionText,\n    mousedown,\n    waitForCollapsedSelection,\n    open,\n  ]);\n\n  const { update } = floating;\n\n  const selectionTextLength = selectionText?.length ?? 0;\n\n  React.useEffect(() => {\n    if (selectionTextLength > 0) {\n      update?.();\n    }\n  }, [selectionTextLength, update]);\n\n  return {\n    hidden: !open,\n    props: {\n      style: floating.style,\n    },\n    ref: floating.refs.setFloating,\n  };\n};\n","import React from 'react';\n\nimport type { ClientRectObject } from '@floating-ui/core';\n\nimport { useIsomorphicLayoutEffect } from '@udecode/plate-common';\n\nimport { createVirtualElement } from '../createVirtualElement';\nimport {\n  type ReferenceType,\n  type UseFloatingProps,\n  type UseFloatingReturn,\n  type VirtualElement,\n  autoUpdate,\n  useFloating,\n} from '../libs/floating-ui';\nimport { getSelectionBoundingClientRect } from '../utils/index';\n\nexport interface UseVirtualFloatingOptions extends Partial<UseFloatingProps> {\n  getBoundingClientRect?: () => ClientRectObject;\n  open?: boolean;\n}\n\nexport interface UseVirtualFloatingReturn<\n  RT extends ReferenceType = ReferenceType,\n> extends UseFloatingReturn<RT> {\n  style: React.CSSProperties;\n  virtualElementRef: React.MutableRefObject<VirtualElement>;\n}\n\n/**\n * `useFloating` with a controlled virtual element. Used to follow cursor\n * position.\n *\n * Default options:\n *\n * - `whileElementsMounted: autoUpdate`\n *\n * Additional options:\n *\n * - `getBoundingClientRect` to get the bounding client rect.\n * - `hidden` to hide the floating element\n *\n * Additional returns:\n *\n * - `style` to apply to the floating element\n * - `virtualElementRef`\n *\n * @see useFloating\n * @see https://floating-ui.com/docs/react-dom#virtual-element\n */\nexport const useVirtualFloating = <RT extends ReferenceType = ReferenceType>({\n  getBoundingClientRect = getSelectionBoundingClientRect,\n  ...floatingOptions\n}: UseVirtualFloatingOptions): UseVirtualFloatingReturn<RT> => {\n  const virtualElementRef = React.useRef<RT>(createVirtualElement() as RT);\n  const [visible, setVisible] = React.useState(true);\n\n  const floatingResult = useFloating<RT>({\n    // update on scroll and resize\n    whileElementsMounted: autoUpdate,\n    ...floatingOptions,\n  });\n\n  const { middlewareData, refs, strategy, update, x, y } = floatingResult;\n\n  useIsomorphicLayoutEffect(() => {\n    virtualElementRef.current.getBoundingClientRect = getBoundingClientRect;\n  }, [getBoundingClientRect, update]);\n\n  useIsomorphicLayoutEffect(() => {\n    refs.setReference(virtualElementRef.current);\n  }, [refs]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!middlewareData?.hide) return;\n\n    const { referenceHidden } = middlewareData.hide;\n\n    setVisible(!referenceHidden);\n  }, [middlewareData.hide]);\n\n  return {\n    ...floatingResult,\n    style: {\n      display: floatingOptions.open === false ? 'none' : undefined,\n      left: x ?? 0,\n      position: strategy,\n      top: y ?? 0,\n      visibility: visible ? undefined : 'hidden',\n    },\n    virtualElementRef,\n  };\n};\n","export {\n  FloatingArrow,\n  FloatingDelayGroup,\n  FloatingFocusManager,\n  FloatingNode,\n  FloatingOverlay,\n  FloatingPortal,\n  FloatingTree,\n  // dom\n  arrow,\n  autoPlacement,\n  autoUpdate,\n  computePosition,\n  detectOverflow,\n  flip,\n  getOverflowAncestors,\n  hide,\n  // core\n  inline,\n  limitShift,\n  offset,\n  // react\n  safePolygon,\n  shift,\n  size,\n  useClick,\n  useDelayGroup,\n  useDelayGroupContext,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingPortalNode,\n  useFloatingTree,\n  useFocus,\n  useHover,\n  useId,\n  useInteractions,\n  useListNavigation,\n  useRole,\n  useTypeahead,\n} from '@floating-ui/react';\n\nexport type {\n  AlignedPlacement,\n  AutoUpdateOptions,\n  Axis,\n  Boundary,\n  ClientRectObject,\n  ComputePositionConfig,\n  ComputePositionReturn,\n  ContextData,\n  Coords,\n  DetectOverflowOptions,\n  Dimensions,\n  ElementContext,\n  ElementProps,\n  ElementRects,\n  Elements,\n  ExtendedRefs,\n  FloatingContext,\n  FloatingElement,\n  FloatingEvents,\n  FloatingNodeType,\n  FloatingTreeType,\n  Length,\n  Middleware,\n  MiddlewareData,\n  MiddlewareReturn,\n  NodeScroll,\n  Padding,\n  Placement,\n  Platform,\n  Rect,\n  ReferenceElement,\n  ReferenceType,\n  RootBoundary,\n  Side,\n  SideObject,\n  SizeOptions,\n  Strategy,\n  UseFloatingData,\n  UseFloatingProps,\n  UseFloatingReturn,\n  VirtualElement,\n} from '@floating-ui/react';\n","import { type TReactEditor, toDOMRange } from '@udecode/plate-common';\nimport { type Value, getRange } from '@udecode/plate-common/server';\nimport { type Location, Path, type Range } from 'slate';\n\nimport { mergeClientRects } from './mergeClientRects';\n\nexport const getBoundingClientRect = <V extends Value>(\n  editor: TReactEditor<V>,\n  at?: Location | Location[]\n): DOMRect | undefined => {\n  const atRanges: Range[] = (() => {\n    if (!at) return [editor.selection].filter(Boolean) as Range[];\n\n    const atArray = Array.isArray(at) && !Path.isPath(at) ? at : [at];\n\n    return atArray.map((location) => getRange(editor, location));\n  })();\n\n  const clientRects = atRanges\n    .map((range) => toDOMRange(editor, range)?.getBoundingClientRect())\n    .filter(Boolean) as DOMRect[];\n\n  if (clientRects.length === 0) return undefined;\n\n  return mergeClientRects(clientRects);\n};\n","export const makeClientRect = ({\n  bottom,\n  left,\n  right,\n  top,\n}: {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n}): DOMRect => {\n  const width = right - left;\n  const height = bottom - top;\n\n  const props: Omit<DOMRect, 'toJSON'> = {\n    bottom,\n    height,\n    left,\n    right,\n    top,\n    width,\n    x: left,\n    y: top,\n  };\n\n  return {\n    ...props,\n    toJSON: () => props,\n  };\n};\n","import { makeClientRect } from './makeClientRect';\n\nexport const mergeClientRects = (clientRects: DOMRect[]): DOMRect => {\n  if (clientRects.length === 0) {\n    throw new Error('clientRects should not be empty');\n  }\n\n  return makeClientRect({\n    bottom: Math.max(...clientRects.map((rect) => rect.bottom)),\n    left: Math.min(...clientRects.map((rect) => rect.left)),\n    right: Math.max(...clientRects.map((rect) => rect.right)),\n    top: Math.min(...clientRects.map((rect) => rect.top)),\n  });\n};\n","import type React from 'react';\n\nimport type { TReactEditor } from '@udecode/plate-common';\nimport type { Value } from '@udecode/plate-common/server';\nimport type { Location } from 'slate';\n\nimport { getBoundingClientRect } from './getBoundingClientRect';\n\nexport type VirtualRef = React.RefObject<\n  Pick<HTMLElement, 'getBoundingClientRect'>\n>;\n\nexport const createVirtualRef = <V extends Value>(\n  editor: TReactEditor<V>,\n  at?: Location | Location[],\n  {\n    fallbackRect,\n  }: {\n    fallbackRect?: ClientRect;\n  } = {}\n): VirtualRef => ({\n  current: {\n    getBoundingClientRect: () => {\n      const rect = getBoundingClientRect(editor, at) || fallbackRect;\n\n      if (!rect) {\n        throw new Error(\n          'Could not get the bounding client rect of the location. Please provide a fallbackRect.'\n        );\n      }\n\n      return rect;\n    },\n  },\n});\n","import type { ClientRectObject } from '@floating-ui/core';\nimport type { Value } from '@udecode/plate-common/server';\nimport type { Range } from 'slate';\n\nimport { type TReactEditor, toDOMRange } from '@udecode/plate-common';\n\nimport { getDefaultBoundingClientRect } from '../createVirtualElement';\n\n/** Get bounding client rect by slate range */\nexport const getRangeBoundingClientRect = <V extends Value>(\n  editor: TReactEditor<V>,\n  at: Range | null\n): ClientRectObject => {\n  if (!at) return getDefaultBoundingClientRect();\n\n  const domRange = toDOMRange(editor, at);\n\n  if (!domRange) return getDefaultBoundingClientRect();\n\n  return domRange.getBoundingClientRect();\n};\n","import type { ClientRectObject } from '@floating-ui/core';\n\nimport { getDefaultBoundingClientRect } from '../createVirtualElement';\n\n/** Get bounding client rect of the window selection */\nexport const getSelectionBoundingClientRect = (): ClientRectObject => {\n  const domSelection = window.getSelection();\n\n  if (!domSelection || domSelection.rangeCount < 1) {\n    return getDefaultBoundingClientRect();\n  }\n\n  const domRange = domSelection.getRangeAt(0);\n\n  return domRange.getBoundingClientRect();\n};\n"],"mappings":"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","names":["React","mousedown","import_react","import_plate_common","import_react","import_plate_common","import_server","import_plate_common","getBoundingClientRect","React"]}