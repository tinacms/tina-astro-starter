import * as _udecode_plate_common_server from '@udecode/plate-common/server';
import { Value, PlateEditor, WithPlatePlugin, DecorateEntry } from '@udecode/plate-common/server';
import * as _udecode_slate from '@udecode/slate';

interface FindReplacePlugin {
    /** Searching text to highlight */
    search?: string;
}

declare const MARK_SEARCH_HIGHLIGHT = "search_highlight";
declare const createFindReplacePlugin: <OP = FindReplacePlugin, OV extends _udecode_slate.Value = _udecode_slate.Value, OE extends _udecode_plate_common_server.PlateEditor<OV> = _udecode_plate_common_server.PlateEditor<OV>>(override?: Partial<_udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: _udecode_plate_common_server.OverrideByKey<OV, OE> | undefined) => _udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>;

declare const decorateFindReplace: <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(editor: E, { key, type }: WithPlatePlugin<FindReplacePlugin, V, E>) => DecorateEntry;

export { type FindReplacePlugin, MARK_SEARCH_HIGHLIGHT, createFindReplacePlugin, decorateFindReplace };
