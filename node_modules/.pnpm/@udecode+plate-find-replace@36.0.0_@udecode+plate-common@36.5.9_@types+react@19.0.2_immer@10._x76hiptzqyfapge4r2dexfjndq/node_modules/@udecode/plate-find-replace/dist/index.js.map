{"version":3,"sources":["../src/index.ts","../src/createFindReplacePlugin.ts","../src/decorateFindReplace.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './createFindReplacePlugin';\nexport * from './decorateFindReplace';\nexport * from './types';\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nimport type { FindReplacePlugin } from './types';\n\nimport { decorateFindReplace } from './decorateFindReplace';\n\nexport const MARK_SEARCH_HIGHLIGHT = 'search_highlight';\n\nexport const createFindReplacePlugin = createPluginFactory<FindReplacePlugin>({\n  decorate: decorateFindReplace,\n  isLeaf: true,\n  key: MARK_SEARCH_HIGHLIGHT,\n});\n","import type { Range } from 'slate';\n\nimport {\n  type DecorateEntry,\n  type PlateEditor,\n  type Value,\n  type WithPlatePlugin,\n  isText,\n} from '@udecode/plate-common/server';\n\nimport type { FindReplacePlugin } from './types';\n\nexport const decorateFindReplace =\n  <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n    editor: E,\n    { key, type }: WithPlatePlugin<FindReplacePlugin, V, E>\n  ): DecorateEntry =>\n  ([node, path]) => {\n    const ranges: SearchRange[] = [];\n\n    const { search } = editor.pluginsByKey[key].options as FindReplacePlugin;\n\n    if (!search || !isText(node)) {\n      return ranges;\n    }\n\n    const { text } = node;\n    const parts = text.toLowerCase().split(search.toLowerCase());\n    let offset = 0;\n    parts.forEach((part, i) => {\n      if (i !== 0) {\n        ranges.push({\n          anchor: { offset: offset - search.length, path },\n          focus: { offset, path },\n          search,\n          [type]: true,\n        });\n      }\n\n      offset = offset + part.length + search.length;\n    });\n\n    return ranges;\n  };\n\ntype SearchRange = {\n  search: string;\n} & Range;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA,iBAAoC;;;ACEpC,oBAMO;AAIA,IAAM,sBACX,CACE,QACA,EAAE,KAAK,KAAK,MAEd,CAAC,CAAC,MAAM,IAAI,MAAM;AAChB,QAAM,SAAwB,CAAC;AAE/B,QAAM,EAAE,OAAO,IAAI,OAAO,aAAa,GAAG,EAAE;AAE5C,MAAI,CAAC,UAAU,KAAC,sBAAO,IAAI,GAAG;AAC5B,WAAO;AAAA,EACT;AAEA,QAAM,EAAE,KAAK,IAAI;AACjB,QAAM,QAAQ,KAAK,YAAY,EAAE,MAAM,OAAO,YAAY,CAAC;AAC3D,MAAI,SAAS;AACb,QAAM,QAAQ,CAAC,MAAM,MAAM;AACzB,QAAI,MAAM,GAAG;AACX,aAAO,KAAK;AAAA,QACV,QAAQ,EAAE,QAAQ,SAAS,OAAO,QAAQ,KAAK;AAAA,QAC/C,OAAO,EAAE,QAAQ,KAAK;AAAA,QACtB;AAAA,QACA,CAAC,IAAI,GAAG;AAAA,MACV,CAAC;AAAA,IACH;AAEA,aAAS,SAAS,KAAK,SAAS,OAAO;AAAA,EACzC,CAAC;AAED,SAAO;AACT;;;ADrCK,IAAM,wBAAwB;AAE9B,IAAM,8BAA0B,oCAAuC;AAAA,EAC5E,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;","names":["import_server"]}