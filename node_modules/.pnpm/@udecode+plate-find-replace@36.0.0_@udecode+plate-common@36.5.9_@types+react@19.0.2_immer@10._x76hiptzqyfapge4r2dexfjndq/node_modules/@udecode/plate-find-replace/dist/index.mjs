// src/createFindReplacePlugin.ts
import { createPluginFactory } from "@udecode/plate-common/server";

// src/decorateFindReplace.ts
import {
  isText
} from "@udecode/plate-common/server";
var decorateFindReplace = (editor, { key, type }) => ([node, path]) => {
  const ranges = [];
  const { search } = editor.pluginsByKey[key].options;
  if (!search || !isText(node)) {
    return ranges;
  }
  const { text } = node;
  const parts = text.toLowerCase().split(search.toLowerCase());
  let offset = 0;
  parts.forEach((part, i) => {
    if (i !== 0) {
      ranges.push({
        anchor: { offset: offset - search.length, path },
        focus: { offset, path },
        search,
        [type]: true
      });
    }
    offset = offset + part.length + search.length;
  });
  return ranges;
};

// src/createFindReplacePlugin.ts
var MARK_SEARCH_HIGHLIGHT = "search_highlight";
var createFindReplacePlugin = createPluginFactory({
  decorate: decorateFindReplace,
  isLeaf: true,
  key: MARK_SEARCH_HIGHLIGHT
});
export {
  MARK_SEARCH_HIGHLIGHT,
  createFindReplacePlugin,
  decorateFindReplace
};
//# sourceMappingURL=index.mjs.map