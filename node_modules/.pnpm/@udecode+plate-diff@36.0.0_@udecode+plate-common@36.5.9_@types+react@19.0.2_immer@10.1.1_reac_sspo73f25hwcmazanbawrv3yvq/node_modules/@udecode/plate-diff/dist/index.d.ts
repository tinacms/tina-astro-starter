import { TDescendant, PlateEditor, TElement, TEditor } from '@udecode/plate-common/server';
import { BaseEditor } from 'slate';

interface DiffInsertion {
    type: 'insert';
}
interface DiffDeletion {
    type: 'delete';
}
interface DiffUpdate {
    newProperties: Record<string, any>;
    properties: Record<string, any>;
    type: 'update';
}
type DiffOperation = DiffDeletion | DiffInsertion | DiffUpdate;
interface DiffProps {
    diff: true;
    diffOperation: DiffOperation;
}

/**
 * This Apache-2.0 licensed file has been modified by Udecode and other
 * contributors. See /packages/diff/LICENSE for more information.
 */

interface ComputeDiffOptions {
    getDeleteProps: (node: TDescendant) => any;
    getInsertProps: (node: TDescendant) => any;
    getUpdateProps: (node: TDescendant, properties: any, newProperties: any) => any;
    isInline: PlateEditor['isInline'];
    elementsAreRelated?: (element: TElement, nextElement: TElement) => boolean | null;
    ignoreProps?: string[];
    lineBreakChar?: string;
}
declare const computeDiff: (doc0: TDescendant[], doc1: TDescendant[], { getDeleteProps, getInsertProps, getUpdateProps, ignoreProps, isInline, ...options }?: Partial<ComputeDiffOptions>) => TDescendant[];
declare const defaultGetInsertProps: () => DiffProps;
declare const defaultGetDeleteProps: () => DiffProps;
declare const defaultGetUpdateProps: (_node: TDescendant, properties: any, newProperties: any) => DiffProps;

declare const withGetFragmentExcludeDiff: <E extends BaseEditor | TEditor>(editor: E) => E;

export { type ComputeDiffOptions, type DiffDeletion, type DiffInsertion, type DiffOperation, type DiffProps, type DiffUpdate, computeDiff, defaultGetDeleteProps, defaultGetInsertProps, defaultGetUpdateProps, withGetFragmentExcludeDiff };
