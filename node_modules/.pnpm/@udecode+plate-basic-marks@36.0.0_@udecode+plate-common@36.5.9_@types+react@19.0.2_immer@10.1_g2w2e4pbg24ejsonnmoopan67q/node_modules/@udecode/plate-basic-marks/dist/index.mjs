// src/createBasicMarksPlugin.ts
import { createPluginFactory as createPluginFactory8 } from "@udecode/plate-common/server";

// src/createBoldPlugin.ts
import {
  createPluginFactory,
  onKeyDownToggleMark,
  someHtmlElement
} from "@udecode/plate-common/server";
var MARK_BOLD = "bold";
var createBoldPlugin = createPluginFactory({
  deserializeHtml: {
    query: (el) => !someHtmlElement(el, (node) => node.style.fontWeight === "normal"),
    rules: [
      { validNodeName: ["STRONG", "B"] },
      {
        validStyle: {
          fontWeight: ["600", "700", "bold"]
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  isLeaf: true,
  key: MARK_BOLD,
  options: {
    hotkey: "mod+b"
  }
});

// src/createCodePlugin.ts
import {
  createPluginFactory as createPluginFactory2,
  findHtmlParentElement,
  onKeyDownToggleMark as onKeyDownToggleMark2
} from "@udecode/plate-common/server";
var MARK_CODE = "code";
var createCodePlugin = createPluginFactory2({
  deserializeHtml: {
    query(el) {
      const blockAbove = findHtmlParentElement(el, "P");
      if ((blockAbove == null ? void 0 : blockAbove.style.fontFamily) === "Consolas")
        return false;
      return !findHtmlParentElement(el, "PRE");
    },
    rules: [
      {
        validNodeName: ["CODE"]
      },
      {
        validStyle: {
          fontFamily: "Consolas"
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark2
  },
  isLeaf: true,
  key: MARK_CODE,
  options: {
    hotkey: "mod+e"
  }
});

// src/createItalicPlugin.ts
import {
  createPluginFactory as createPluginFactory3,
  onKeyDownToggleMark as onKeyDownToggleMark3,
  someHtmlElement as someHtmlElement2
} from "@udecode/plate-common/server";
var MARK_ITALIC = "italic";
var createItalicPlugin = createPluginFactory3({
  deserializeHtml: {
    query: (el) => !someHtmlElement2(el, (node) => node.style.fontStyle === "normal"),
    rules: [
      { validNodeName: ["EM", "I"] },
      {
        validStyle: {
          fontStyle: "italic"
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark3
  },
  isLeaf: true,
  key: MARK_ITALIC,
  options: {
    hotkey: "mod+i"
  }
});

// src/createStrikethroughPlugin.ts
import {
  createPluginFactory as createPluginFactory4,
  onKeyDownToggleMark as onKeyDownToggleMark4,
  someHtmlElement as someHtmlElement3
} from "@udecode/plate-common/server";
var MARK_STRIKETHROUGH = "strikethrough";
var createStrikethroughPlugin = createPluginFactory4({
  deserializeHtml: {
    query: (el) => !someHtmlElement3(el, (node) => node.style.textDecoration === "none"),
    rules: [
      { validNodeName: ["S", "DEL", "STRIKE"] },
      {
        validStyle: {
          textDecoration: "line-through"
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark4
  },
  isLeaf: true,
  key: MARK_STRIKETHROUGH,
  options: {
    hotkey: "mod+shift+x"
  }
});

// src/createSubscriptPlugin.ts
import {
  createPluginFactory as createPluginFactory5,
  onKeyDownToggleMark as onKeyDownToggleMark5
} from "@udecode/plate-common/server";
var MARK_SUBSCRIPT = "subscript";
var MARK_SUPERSCRIPT = "superscript";
var createSubscriptPlugin = createPluginFactory5({
  deserializeHtml: {
    rules: [
      { validNodeName: ["SUB"] },
      {
        validStyle: {
          verticalAlign: "sub"
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark5
  },
  isLeaf: true,
  key: MARK_SUBSCRIPT,
  options: {
    clear: MARK_SUPERSCRIPT,
    hotkey: "mod+,"
  }
});

// src/createSuperscriptPlugin.ts
import {
  createPluginFactory as createPluginFactory6,
  onKeyDownToggleMark as onKeyDownToggleMark6
} from "@udecode/plate-common/server";
var MARK_SUPERSCRIPT2 = "superscript";
var MARK_SUBSCRIPT2 = "subscript";
var createSuperscriptPlugin = createPluginFactory6({
  deserializeHtml: {
    rules: [
      { validNodeName: ["SUP"] },
      {
        validStyle: {
          verticalAlign: "super"
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark6
  },
  isLeaf: true,
  key: MARK_SUPERSCRIPT2,
  options: {
    clear: MARK_SUBSCRIPT2,
    hotkey: "mod+."
  }
});

// src/createUnderlinePlugin.ts
import {
  createPluginFactory as createPluginFactory7,
  onKeyDownToggleMark as onKeyDownToggleMark7,
  someHtmlElement as someHtmlElement4
} from "@udecode/plate-common/server";
var MARK_UNDERLINE = "underline";
var createUnderlinePlugin = createPluginFactory7({
  deserializeHtml: {
    query: (el) => !someHtmlElement4(el, (node) => node.style.textDecoration === "none"),
    rules: [
      {
        validNodeName: ["U"]
      },
      {
        validStyle: {
          textDecoration: ["underline"]
        }
      }
    ]
  },
  handlers: {
    onKeyDown: onKeyDownToggleMark7
  },
  isLeaf: true,
  key: MARK_UNDERLINE,
  options: {
    hotkey: "mod+u"
  }
});

// src/createBasicMarksPlugin.ts
var KEY_BASIC_MARKS = "basicMarks";
var createBasicMarksPlugin = createPluginFactory8({
  key: KEY_BASIC_MARKS,
  plugins: [
    createBoldPlugin(),
    createCodePlugin(),
    createItalicPlugin(),
    createStrikethroughPlugin(),
    createSubscriptPlugin(),
    createSuperscriptPlugin(),
    createUnderlinePlugin()
  ]
});
export {
  KEY_BASIC_MARKS,
  MARK_BOLD,
  MARK_CODE,
  MARK_ITALIC,
  MARK_STRIKETHROUGH,
  MARK_SUBSCRIPT,
  MARK_SUPERSCRIPT2 as MARK_SUPERSCRIPT,
  MARK_UNDERLINE,
  createBasicMarksPlugin,
  createBoldPlugin,
  createCodePlugin,
  createItalicPlugin,
  createStrikethroughPlugin,
  createSubscriptPlugin,
  createSuperscriptPlugin,
  createUnderlinePlugin
};
//# sourceMappingURL=index.mjs.map