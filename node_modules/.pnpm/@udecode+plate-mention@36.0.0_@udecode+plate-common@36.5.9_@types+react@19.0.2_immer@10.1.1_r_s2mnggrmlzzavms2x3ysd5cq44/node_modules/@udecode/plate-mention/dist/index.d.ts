import * as _udecode_plate_common_server from '@udecode/plate-common/server';
import { Value, PlateEditor, PlatePluginKey } from '@udecode/plate-common/server';
import * as _udecode_slate from '@udecode/slate';
import { TriggerComboboxPlugin } from '@udecode/plate-combobox';
import { TElement, TNodeProps } from '@udecode/plate-common';

interface TMentionItemBase {
    text: string;
}
interface TMentionInputElement extends TElement {
    trigger: string;
}
interface TMentionElement extends TElement {
    value: string;
}
interface MentionPlugin<TItem extends TMentionItemBase = TMentionItemBase> extends TriggerComboboxPlugin {
    createMentionNode?: (item: TItem, search: string) => TNodeProps<TMentionElement>;
    insertSpaceAfterMention?: boolean;
}

declare const ELEMENT_MENTION = "mention";
declare const ELEMENT_MENTION_INPUT = "mention_input";
/** Enables support for autocompleting @mentions. */
declare const createMentionPlugin: <OP = MentionPlugin<TMentionItemBase>, OV extends _udecode_slate.Value = _udecode_slate.Value, OE extends _udecode_plate_common_server.PlateEditor<OV> = _udecode_plate_common_server.PlateEditor<OV>>(override?: Partial<_udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: _udecode_plate_common_server.OverrideByKey<OV, OE> | undefined) => _udecode_plate_common_server.PlatePlugin<_udecode_plate_common_server.NoInfer<OP>, OV, OE>;

type MentionOnSelectItem<TItem extends TMentionItemBase = TMentionItemBase> = <V extends Value>(editor: PlateEditor<V>, item: TItem, search?: string) => void;
declare const getMentionOnSelectItem: <TItem extends TMentionItemBase = TMentionItemBase>({ key, }?: PlatePluginKey) => MentionOnSelectItem<TItem>;

export { ELEMENT_MENTION, ELEMENT_MENTION_INPUT, type MentionOnSelectItem, type MentionPlugin, type TMentionElement, type TMentionInputElement, type TMentionItemBase, createMentionPlugin, getMentionOnSelectItem };
