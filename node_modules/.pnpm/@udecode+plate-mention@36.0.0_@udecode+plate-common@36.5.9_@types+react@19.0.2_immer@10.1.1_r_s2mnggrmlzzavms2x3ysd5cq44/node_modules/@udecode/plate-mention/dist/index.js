"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ELEMENT_MENTION: () => ELEMENT_MENTION,
  ELEMENT_MENTION_INPUT: () => ELEMENT_MENTION_INPUT,
  createMentionPlugin: () => createMentionPlugin,
  getMentionOnSelectItem: () => getMentionOnSelectItem
});
module.exports = __toCommonJS(src_exports);

// src/createMentionPlugin.ts
var import_plate_combobox = require("@udecode/plate-combobox");
var import_server = require("@udecode/plate-common/server");
var ELEMENT_MENTION = "mention";
var ELEMENT_MENTION_INPUT = "mention_input";
var createMentionPlugin = (0, import_server.createPluginFactory)({
  isElement: true,
  isInline: true,
  isMarkableVoid: true,
  isVoid: true,
  key: ELEMENT_MENTION,
  options: {
    createComboboxInput: (trigger) => ({
      children: [{ text: "" }],
      trigger,
      type: ELEMENT_MENTION_INPUT
    }),
    createMentionNode: (item) => ({ value: item.text }),
    trigger: "@",
    triggerPreviousCharPattern: /^\s?$/
  },
  plugins: [
    {
      isElement: true,
      isInline: true,
      isVoid: true,
      key: ELEMENT_MENTION_INPUT
    }
  ],
  withOverrides: import_plate_combobox.withTriggerCombobox
});

// src/getMentionOnSelectItem.ts
var import_server2 = require("@udecode/plate-common/server");
var getMentionOnSelectItem = ({
  key = ELEMENT_MENTION
} = {}) => (editor, item, search = "") => {
  var _a;
  const {
    options: { createMentionNode, insertSpaceAfterMention },
    type
  } = (0, import_server2.getPlugin)(editor, key);
  const props = createMentionNode(item, search);
  (0, import_server2.insertNodes)(editor, __spreadValues({
    children: [{ text: "" }],
    type
  }, props));
  (0, import_server2.moveSelection)(editor, { unit: "offset" });
  const pathAbove = (_a = (0, import_server2.getBlockAbove)(editor)) == null ? void 0 : _a[1];
  const isBlockEnd = editor.selection && pathAbove && (0, import_server2.isEndPoint)(editor, editor.selection.anchor, pathAbove);
  if (isBlockEnd && insertSpaceAfterMention) {
    (0, import_server2.insertText)(editor, " ");
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ELEMENT_MENTION,
  ELEMENT_MENTION_INPUT,
  createMentionPlugin,
  getMentionOnSelectItem
});
//# sourceMappingURL=index.js.map