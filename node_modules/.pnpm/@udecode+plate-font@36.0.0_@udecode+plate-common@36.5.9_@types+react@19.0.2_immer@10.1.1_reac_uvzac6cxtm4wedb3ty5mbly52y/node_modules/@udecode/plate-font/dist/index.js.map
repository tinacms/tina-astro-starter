{"version":3,"sources":["../src/index.ts","../src/createFontBackgroundColorPlugin.ts","../src/createFontColorPlugin.ts","../src/createFontFamilyPlugin.ts","../src/createFontSizePlugin.ts","../src/createFontWeightPlugin.ts","../src/hooks/useColorDropdownMenu.ts","../src/hooks/useColorInput.ts","../src/hooks/useColorsCustom.ts","../src/transforms/setBlockBackgroundColor.ts"],"sourcesContent":["/**\n * @file Automatically generated by barrelsby.\n */\n\nexport * from './createFontBackgroundColorPlugin';\nexport * from './createFontColorPlugin';\nexport * from './createFontFamilyPlugin';\nexport * from './createFontSizePlugin';\nexport * from './createFontWeightPlugin';\nexport * from './hooks/index';\nexport * from './transforms/index';\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const MARK_BG_COLOR = 'backgroundColor';\n\nexport const createFontBackgroundColorPlugin = createPluginFactory({\n  inject: {\n    props: {\n      nodeKey: MARK_BG_COLOR,\n    },\n  },\n  key: MARK_BG_COLOR,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (element) => ({ [type]: element.style.backgroundColor }),\n      isLeaf: true,\n      rules: [\n        {\n          validStyle: {\n            backgroundColor: '*',\n          },\n        },\n      ],\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const MARK_COLOR = 'color';\n\nexport const createFontColorPlugin = createPluginFactory({\n  inject: {\n    props: {\n      defaultNodeValue: 'black',\n      nodeKey: MARK_COLOR,\n    },\n  },\n  key: MARK_COLOR,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode(element) {\n        if (element.style.color) {\n          return { [type]: element.style.color };\n        }\n      },\n      isLeaf: true,\n      rules: [\n        {\n          validStyle: {\n            color: '*',\n          },\n        },\n      ],\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const MARK_FONT_FAMILY = 'fontFamily';\n\nexport const createFontFamilyPlugin = createPluginFactory({\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_FAMILY,\n    },\n  },\n  key: MARK_FONT_FAMILY,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (element) => ({ [type]: element.style.fontFamily }),\n      isLeaf: true,\n      rules: [\n        {\n          validStyle: {\n            fontFamily: '*',\n          },\n        },\n      ],\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const MARK_FONT_SIZE = 'fontSize';\n\nexport const createFontSizePlugin = createPluginFactory({\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_SIZE,\n    },\n  },\n  key: MARK_FONT_SIZE,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (element) => ({ [type]: element.style.fontSize }),\n      isLeaf: true,\n      rules: [\n        {\n          validStyle: {\n            fontSize: '*',\n          },\n        },\n      ],\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const MARK_FONT_WEIGHT = 'fontWeight';\n\nexport const createFontWeightPlugin = createPluginFactory({\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_WEIGHT,\n    },\n  },\n  key: MARK_FONT_WEIGHT,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (element) => ({ [type]: element.style.fontWeight }),\n      isLeaf: true,\n      rules: [\n        {\n          validStyle: {\n            fontWeight: '*',\n          },\n        },\n      ],\n    },\n  }),\n});\n","import React from 'react';\n\nimport {\n  focusEditor,\n  useEditorRef,\n  useEditorSelector,\n} from '@udecode/plate-common';\nimport {\n  getMark,\n  removeMark,\n  select,\n  setMarks,\n} from '@udecode/plate-common/server';\n\nexport const useColorDropdownMenuState = ({\n  closeOnSelect = true,\n  colors,\n  customColors,\n  nodeType,\n}: {\n  closeOnSelect?: boolean;\n  colors: { isBrightColor: boolean; name: string; value: string }[];\n  customColors: { isBrightColor: boolean; name: string; value: string }[];\n  nodeType: string;\n}) => {\n  const editor = useEditorRef();\n\n  const selectionDefined = useEditorSelector(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (editor) => !!editor.selection,\n    []\n  );\n\n  const color = useEditorSelector(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (editor) => getMark(editor, nodeType) as string,\n    [nodeType]\n  );\n\n  const [selectedColor, setSelectedColor] = React.useState<string>();\n\n  const [open, setOpen] = React.useState(false);\n  const onToggle = React.useCallback(\n    (value = !open) => {\n      setOpen(value);\n    },\n    [open, setOpen]\n  );\n\n  const updateColor = React.useCallback(\n    (value: string) => {\n      if (editor.selection) {\n        setSelectedColor(value);\n\n        select(editor, editor.selection);\n        focusEditor(editor);\n\n        setMarks(editor, { [nodeType]: value });\n      }\n    },\n    [editor, nodeType]\n  );\n\n  const updateColorAndClose = React.useCallback(\n    (value: string) => {\n      updateColor(value);\n      closeOnSelect && onToggle();\n    },\n    [closeOnSelect, onToggle, updateColor]\n  );\n\n  const clearColor = React.useCallback(() => {\n    if (editor.selection) {\n      select(editor, editor.selection);\n      focusEditor(editor);\n\n      if (selectedColor) {\n        removeMark(editor, { key: nodeType });\n      }\n\n      closeOnSelect && onToggle();\n    }\n  }, [editor, selectedColor, closeOnSelect, onToggle, nodeType]);\n\n  React.useEffect(() => {\n    if (selectionDefined) {\n      setSelectedColor(color);\n    }\n  }, [color, selectionDefined]);\n\n  return {\n    clearColor,\n    color,\n    colors,\n    customColors,\n    onToggle,\n    open,\n    selectedColor,\n    updateColor,\n    updateColorAndClose,\n  };\n};\n\nexport const useColorDropdownMenu = ({\n  onToggle,\n  open,\n}: ReturnType<typeof useColorDropdownMenuState>) => {\n  return {\n    buttonProps: {\n      pressed: open,\n    },\n    menuProps: {\n      onOpenChange: onToggle,\n      open,\n    },\n  };\n};\n","import React from 'react';\n\nexport const useColorInput = () => {\n  const ref = React.useRef<HTMLInputElement | null>(null);\n\n  const onClick = () => {\n    // force click action on the input to open color picker\n    ref.current?.click();\n  };\n\n  return {\n    childProps: {\n      onClick,\n    },\n    inputRef: ref,\n  };\n};\n","import React from 'react';\n\nimport debounce from 'lodash/debounce.js';\n\nexport const useColorsCustomState = ({\n  color,\n  colors,\n  customColors,\n  updateCustomColor,\n}: {\n  color?: string;\n  colors: any[];\n  customColors: any[];\n  updateCustomColor: (color: string) => void;\n}) => {\n  const [customColor, setCustomColor] = React.useState<string>();\n\n  const [value, setValue] = React.useState<string>(color || '#000000');\n\n  React.useEffect(() => {\n    if (\n      !color ||\n      customColors.some((c) => c.value === color) ||\n      colors.some((c) => c.value === color)\n    ) {\n      return;\n    }\n\n    setCustomColor(color);\n  }, [color, colors, customColors]);\n\n  const computedColors = React.useMemo(\n    () =>\n      customColor\n        ? [\n            ...customColors,\n            {\n              isBrightColor: false,\n              name: '',\n              value: customColor,\n            },\n          ]\n        : customColors,\n    [customColor, customColors]\n  );\n\n  return {\n    computedColors,\n    setValue,\n    updateCustomColor,\n    value,\n  };\n};\n\nexport const useColorsCustom = ({\n  setValue,\n  updateCustomColor,\n  value,\n}: ReturnType<typeof useColorsCustomState>) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const updateCustomColorDebounced = React.useCallback(\n    debounce(updateCustomColor, 100),\n    [updateCustomColor]\n  );\n\n  return {\n    inputProps: {\n      onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value);\n        updateCustomColorDebounced(e.target.value);\n      },\n      value,\n    },\n    menuItemProps: {\n      onSelect: (e: Event) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n","import {\n  type PlateEditor,\n  type TNodeEntry,\n  type Value,\n  setNodes,\n} from '@udecode/plate-common';\n\nimport { MARK_BG_COLOR } from '../createFontBackgroundColorPlugin';\n\nexport const setBlockBackgroundColor = (\n  editor: PlateEditor<Value>,\n  block: TNodeEntry,\n  backgroundColor: string\n) => {\n  setNodes(editor, { [MARK_BG_COLOR]: backgroundColor }, { at: block[1] });\n};\n"],"mappings":"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","names":["import_server","import_server","import_server","import_server","import_server","editor","React","import_react","React","import_react","React","debounce","import_plate_common"]}