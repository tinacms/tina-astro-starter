"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  KEY_ALIGN: () => KEY_ALIGN,
  createAlignPlugin: () => createAlignPlugin,
  setAlign: () => setAlign,
  useAlignDropdownMenu: () => useAlignDropdownMenu,
  useAlignDropdownMenuState: () => useAlignDropdownMenuState
});
module.exports = __toCommonJS(src_exports);

// src/client/useAlignDropdownMenu.ts
var import_plate_common = require("@udecode/plate-common");
var import_server = require("@udecode/plate-common/server");
var useAlignDropdownMenuState = () => {
  const value = (0, import_plate_common.useEditorSelector)((editor) => {
    let commonAlignment;
    const codeBlockEntries = (0, import_plate_common.getNodeEntries)(editor, {
      match: (n) => (0, import_plate_common.isBlock)(editor, n)
    });
    const nodes = Array.from(codeBlockEntries);
    nodes.forEach(([node, path]) => {
      const align = node[KEY_ALIGN] || "start";
      if (!(0, import_server.isDefined)(commonAlignment)) {
        commonAlignment = align;
      } else if (commonAlignment !== align) {
        commonAlignment = void 0;
      }
    });
    if ((0, import_server.isDefined)(commonAlignment)) {
      const nodeValue = commonAlignment;
      if (nodeValue === "left")
        return "left";
      if (nodeValue === "center")
        return "center";
      if (nodeValue === "right")
        return "right";
      if (nodeValue === "end")
        return "end";
      if (nodeValue === "justify")
        return "justify";
    }
    return "start";
  }, []);
  return {
    value
  };
};
var useAlignDropdownMenu = ({
  value
}) => {
  const editor = (0, import_plate_common.useEditorRef)();
  return {
    radioGroupProps: {
      onValueChange: (newValue) => {
        setAlign(editor, {
          key: KEY_ALIGN,
          value: newValue
        });
        (0, import_plate_common.focusEditor)(editor);
      },
      value
    }
  };
};

// src/shared/createAlignPlugin.ts
var import_server2 = require("@udecode/plate-common/server");
var KEY_ALIGN = "align";
var createAlignPlugin = (0, import_server2.createPluginFactory)({
  key: KEY_ALIGN,
  then: (editor) => ({
    inject: {
      props: {
        defaultNodeValue: "start",
        nodeKey: KEY_ALIGN,
        styleKey: "textAlign",
        validNodeValues: ["start", "left", "center", "right", "end", "justify"],
        validTypes: [(0, import_server2.getPluginType)(editor, import_server2.ELEMENT_DEFAULT)]
      }
    },
    then: (_, plugin) => (0, import_server2.mapInjectPropsToPlugin)(editor, plugin, {
      deserializeHtml: {
        getNode: (el, node) => {
          if (el.style.textAlign) {
            node[plugin.key] = el.style.textAlign;
          }
        }
      }
    })
  })
});

// src/shared/transforms/setAlign.ts
var import_server3 = require("@udecode/plate-common/server");
var setAlign = (editor, {
  key = KEY_ALIGN,
  setNodesOptions,
  value
}) => {
  const { defaultNodeValue, nodeKey, validTypes } = (0, import_server3.getPluginInjectProps)(
    editor,
    key
  );
  const match = (n) => {
    return (0, import_server3.isBlock)(editor, n) && !!validTypes && validTypes.includes(n.type);
  };
  if (value === defaultNodeValue) {
    (0, import_server3.unsetNodes)(editor, nodeKey, __spreadValues({
      match
    }, setNodesOptions));
  } else {
    (0, import_server3.setElements)(
      editor,
      { [nodeKey]: value },
      __spreadValues({
        match
      }, setNodesOptions)
    );
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  KEY_ALIGN,
  createAlignPlugin,
  setAlign,
  useAlignDropdownMenu,
  useAlignDropdownMenuState
});
//# sourceMappingURL=index.js.map