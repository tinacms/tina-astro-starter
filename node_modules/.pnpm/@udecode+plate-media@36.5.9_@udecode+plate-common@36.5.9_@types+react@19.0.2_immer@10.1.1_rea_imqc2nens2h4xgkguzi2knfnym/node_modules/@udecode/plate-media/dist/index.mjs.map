{"version":3,"sources":["../src/audio/createAudioPlugin.ts","../src/file/createFilePlugin.ts","../src/image/createImagePlugin.ts","../src/image/transforms/insertImage.ts","../src/image/utils/isImageUrl.ts","../src/image/withImageEmbed.ts","../src/image/withImageUpload.ts","../src/image/withImage.ts","../src/image/image-preview-store.ts","../src/image/components/Image.tsx","../src/image/utils/openImagePreView.ts","../src/image/components/PreviewImage.tsx","../src/image/hooks/useZoom.ts","../src/image/components/ScaleInput.tsx","../src/image/hooks/useImagePreview.ts","../src/media/insertMedia.ts","../src/media/mediaStore.ts","../src/media/types.ts","../src/media/useMediaState.ts","../src/media-embed/createMediaEmbedPlugin.ts","../src/media-embed/parseIframeUrl.ts","../src/media-embed/parseTwitterUrl.ts","../src/media-embed/parseVideoUrl.ts","../src/media-embed/transforms/insertMediaEmbed.ts","../src/video/createVideoPlugin.ts","../src/media/useMediaToolbarButton.ts","../src/media/FloatingMedia/FloatingMediaEditButton.tsx","../src/media/FloatingMedia/floatingMediaStore.ts","../src/media/FloatingMedia/FloatingMediaUrlInput.tsx","../src/media/FloatingMedia/submitFloatingMedia.ts","../src/media/FloatingMedia/FloatingMedia.tsx","../src/media/hooks/useMediaController.ts","../src/placeholder/createPlaceholderPlugin.ts","../src/placeholder/placeholderStore.ts","../src/placeholder/hooks/usePlaceholderElement.ts","../src/placeholder/popover/usePlaceholderPopover.ts","../src/placeholder/transforms/insertPlaceholder.ts","../src/placeholder/transforms/setMediaNode.ts"],"sourcesContent":["import { createPluginFactory } from '@udecode/plate-common';\n\nimport type { AudioPlugin } from './types';\n\nexport const ELEMENT_AUDIO = 'audio';\n\nexport const createAudioPlugin = createPluginFactory<AudioPlugin>({\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_AUDIO,\n});\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport type { FilePlugin } from './types';\n\nexport const ELEMENT_FILE = 'file';\n\nexport const createFilePlugin = createPluginFactory<FilePlugin>({\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_FILE,\n});\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nimport type { ImagePlugin } from './types';\n\nimport { withImage } from './withImage';\n\nexport const ELEMENT_IMAGE = 'img';\n\n/** Enables support for images. */\nexport const createImagePlugin = createPluginFactory<ImagePlugin>({\n  dangerouslyAllowAttributes: ['alt', 'width', 'height'],\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_IMAGE,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (el) => ({\n        type,\n        url: el.getAttribute('src'),\n      }),\n      rules: [\n        {\n          validNodeName: 'IMG',\n        },\n      ],\n    },\n  }),\n  withOverrides: withImage,\n});\n","import {\n  type InsertNodesOptions,\n  type PlateEditor,\n  type Value,\n  getPluginType,\n  insertNodes,\n} from '@udecode/plate-common/server';\n\nimport type { TImageElement } from '../types';\n\nimport { ELEMENT_IMAGE } from '../createImagePlugin';\n\nexport const insertImage = <V extends Value>(\n  editor: PlateEditor<V>,\n  url: ArrayBuffer | string,\n  options: InsertNodesOptions<V> = {}\n) => {\n  const text = { text: '' };\n  const image: TImageElement = {\n    children: [text],\n    type: getPluginType(editor, ELEMENT_IMAGE),\n    url: url as any,\n  };\n  insertNodes<TImageElement>(editor, image, {\n    nextBlock: true,\n    ...(options as any),\n  });\n};\n","import { isUrl } from '@udecode/plate-common/server';\n\nconst imageExtensions = new Set([\n  'ase',\n  'art',\n  'bmp',\n  'blp',\n  'cd5',\n  'cit',\n  'cpt',\n  'cr2',\n  'cut',\n  'dds',\n  'dib',\n  'djvu',\n  'egt',\n  'exif',\n  'gif',\n  'gpl',\n  'grf',\n  'icns',\n  'ico',\n  'iff',\n  'jng',\n  'jpeg',\n  'jpg',\n  'jfif',\n  'jp2',\n  'jps',\n  'lbm',\n  'max',\n  'miff',\n  'mng',\n  'msp',\n  'nitf',\n  'ota',\n  'pbm',\n  'pc1',\n  'pc2',\n  'pc3',\n  'pcf',\n  'pcx',\n  'pdn',\n  'pgm',\n  'PI1',\n  'PI2',\n  'PI3',\n  'pict',\n  'pct',\n  'pnm',\n  'pns',\n  'ppm',\n  'psb',\n  'psd',\n  'pdd',\n  'psp',\n  'px',\n  'pxm',\n  'pxr',\n  'qfx',\n  'raw',\n  'rle',\n  'sct',\n  'sgi',\n  'rgb',\n  'int',\n  'bw',\n  'tga',\n  'tiff',\n  'tif',\n  'vtf',\n  'xbm',\n  'xcf',\n  'xpm',\n  '3dv',\n  'amf',\n  'ai',\n  'awg',\n  'cgm',\n  'cdr',\n  'cmx',\n  'dxf',\n  'e2d',\n  'egt',\n  'eps',\n  'fs',\n  'gbr',\n  'odg',\n  'svg',\n  'stl',\n  'vrml',\n  'x3d',\n  'sxd',\n  'v2d',\n  'vnd',\n  'wmf',\n  'emf',\n  'art',\n  'xar',\n  'png',\n  'webp',\n  'jxr',\n  'hdp',\n  'wdp',\n  'cur',\n  'ecw',\n  'iff',\n  'lbm',\n  'liff',\n  'nrrd',\n  'pam',\n  'pcx',\n  'pgf',\n  'sgi',\n  'rgb',\n  'rgba',\n  'bw',\n  'int',\n  'inta',\n  'sid',\n  'ras',\n  'sun',\n  'tga',\n]);\n\nexport const isImageUrl = (url: string) => {\n  if (!isUrl(url)) return false;\n\n  const ext = new URL(url).pathname.split('.').pop() as string;\n\n  return imageExtensions.has(ext);\n};\n","import type {\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common/server';\n\nimport type { ImagePlugin } from './types';\n\nimport { insertImage } from './transforms/insertImage';\nimport { isImageUrl } from './utils/isImageUrl';\n\n/** If inserted text is image url, insert image instead. */\nexport const withImageEmbed = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  _plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n\n    if (isImageUrl(text)) {\n      insertImage(editor, text);\n\n      return;\n    }\n\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n","import {\n  type PlateEditor,\n  type Value,\n  type WithPlatePlugin,\n  getInjectedPlugins,\n  pipeInsertDataQuery,\n} from '@udecode/plate-common/server';\n\nimport type { ImagePlugin } from './types';\n\nimport { insertImage } from './transforms/insertImage';\n\n/**\n * Allows for pasting images from clipboard. Not yet: dragging and dropping\n * images, selecting them through a file system dialog.\n */\nexport const withImageUpload = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { uploadImage },\n  } = plugin;\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n    const { files } = dataTransfer;\n\n    if (!text && files && files.length > 0) {\n      const injectedPlugins = getInjectedPlugins<{}, V, E>(editor, plugin);\n\n      if (\n        !pipeInsertDataQuery<{}, V, E>(injectedPlugins, {\n          data: text,\n          dataTransfer,\n        })\n      ) {\n        return insertData(dataTransfer);\n      }\n\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n\n        if (mime === 'image') {\n          reader.addEventListener('load', async () => {\n            if (!reader.result) {\n              return;\n            }\n\n            const uploadedUrl = uploadImage\n              ? await uploadImage(reader.result)\n              : reader.result;\n\n            insertImage(editor, uploadedUrl);\n          });\n\n          reader.readAsDataURL(file);\n        }\n      }\n    } else {\n      insertData(dataTransfer);\n    }\n  };\n\n  return editor;\n};\n","import type {\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common/server';\n\nimport type { ImagePlugin } from './types';\n\nimport { withImageEmbed } from './withImageEmbed';\nimport { withImageUpload } from './withImageUpload';\n\n/**\n * @see withImageUpload\n * @see withImageEmbed\n */\nexport const withImage = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>,\n>(\n  editor: E,\n  plugin: WithPlatePlugin<ImagePlugin, V, E>\n) => {\n  const {\n    options: { disableEmbedInsert, disableUploadInsert },\n  } = plugin;\n\n  if (!disableUploadInsert) {\n    editor = withImageUpload(editor, plugin);\n  }\n  if (!disableEmbedInsert) {\n    editor = withImageEmbed(editor, plugin);\n  }\n\n  return editor;\n};\n","import { createZustandStore } from '@udecode/plate-common/server';\n\nexport interface previewItem {\n  url: string;\n  id?: string;\n}\n\nexport const imagePreviewStore = createZustandStore('imagePreview')({\n  boundingClientRect: {} as DOMRect,\n  currentPreview: null as null | previewItem,\n  isEditingScale: false,\n  openEditorId: null as null | string,\n  previewList: [] as previewItem[],\n  scale: 1 as number,\n  translate: { x: 0, y: 0 },\n})\n  .extendActions((set) => ({\n    close: () => {\n      set.currentPreview(null);\n      set.previewList([]);\n      set.openEditorId(null);\n      set.scale(1);\n      set.translate({ x: 0, y: 0 });\n      set.isEditingScale(false);\n    },\n  }))\n  .extendSelectors((state) => ({\n    isOpen: (editorId: string) => state.openEditorId === editorId,\n  }));\n\nexport const imagePreviewActions = imagePreviewStore.set;\n\nexport const imagePreviewSelectors = imagePreviewStore.get;\n\nexport const useImagePreviewSelectors = () => imagePreviewStore.use;\n","import {\n  createPrimitiveComponent,\n  useEditorRef,\n  useElement,\n} from '@udecode/plate-common';\n\nimport type { TMediaElement } from '../../media';\n\nimport { openImagePreView } from '../utils';\n\nexport const useImage = () => {\n  const element = useElement<TMediaElement>();\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      draggable: true,\n      onDoubleClickCapture: () => {\n        openImagePreView(editor, element);\n      },\n      src: element.url,\n    },\n  };\n};\n\nexport const Image = createPrimitiveComponent('img')({\n  propsHook: useImage,\n});\n","import { type PlateEditor, getNodeEntries } from '@udecode/plate-common';\n\nimport type { TMediaElement } from '../..';\n\nimport { ELEMENT_IMAGE } from '../createImagePlugin';\nimport { imagePreviewActions, type previewItem } from '../image-preview-store';\n\nconst getUrlList = (editor: PlateEditor) => {\n  const enties = getNodeEntries(editor, {\n    at: [],\n    match: (n) => n.type === ELEMENT_IMAGE,\n  });\n\n  return Array.from(enties, (item) => ({\n    id: item[0].id,\n    url: item[0].url,\n  })) as unknown as previewItem[];\n};\n\nexport const openImagePreView = (\n  editor: PlateEditor,\n  element: TMediaElement\n) => {\n  const { id, url } = element;\n  const urlList = getUrlList(editor);\n  document.documentElement.style.overflowY = 'hidden';\n  imagePreviewActions.openEditorId(editor.id);\n  imagePreviewActions.currentPreview({ id, url });\n  imagePreviewActions.previewList(urlList);\n};\n","import React, { useEffect, useMemo } from 'react';\n\nimport { createPrimitiveComponent } from '@udecode/plate-common';\n\nimport { useZoom } from '../hooks/useZoom';\nimport {\n  imagePreviewActions,\n  useImagePreviewSelectors,\n} from '../image-preview-store';\n\nexport const usePreviewImageState = () => {\n  const currentPreview = useImagePreviewSelectors().currentPreview();\n  const translate = useImagePreviewSelectors().translate();\n  const scale = useImagePreviewSelectors().scale();\n  const imageRef = React.useRef<HTMLImageElement>(null);\n  const setBoundingClientRect = imagePreviewActions.boundingClientRect;\n\n  return {\n    currentPreview,\n    imageRef,\n    scale,\n    setBoundingClientRect,\n    translate,\n  };\n};\n\nexport const usePreviewImage = ({\n  currentPreview,\n  imageRef,\n  scale,\n  setBoundingClientRect,\n  translate,\n}: ReturnType<typeof usePreviewImageState>) => {\n  const isZoomIn = useMemo(() => scale <= 1, [scale]);\n\n  const { zoomIn, zoomOut } = useZoom();\n\n  useEffect(() => {\n    if (scale <= 1) return;\n\n    const boundingClientRect = imageRef.current?.getBoundingClientRect();\n\n    if (!boundingClientRect) return;\n\n    setBoundingClientRect(boundingClientRect);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [translate.x, translate.y, scale]);\n\n  return {\n    props: {\n      draggable: false,\n      onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.stopPropagation();\n        isZoomIn ? zoomIn() : zoomOut();\n      },\n      ref: imageRef,\n      src: currentPreview?.url,\n      style: {\n        cursor: isZoomIn ? 'zoom-in' : 'zoom-out',\n        transform: `scale(${scale}) translate(${translate.x + 'px'}, ${translate.y + 'px'})`,\n      },\n    },\n  };\n};\n\nexport const PreviewImage = createPrimitiveComponent('img')({\n  propsHook: usePreviewImage,\n  stateHook: usePreviewImageState,\n});\n","import { useCallback } from 'react';\n\nimport {\n  imagePreviewActions,\n  useImagePreviewSelectors,\n} from '../image-preview-store';\n\nexport const useZoom = () => {\n  const scale = useImagePreviewSelectors().scale();\n  const setScale = imagePreviewActions.scale;\n  const setTranslate = imagePreviewActions.translate;\n\n  const zoomIn = useCallback(() => {\n    if (scale >= 2) return;\n\n    const targets = [0, 0.5, 1, 1.5, 2];\n    const nextScale = targets.find((target) => scale < target);\n\n    nextScale && setScale(nextScale);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scale]);\n\n  const zoomOut = useCallback(() => {\n    if (scale <= 0) return;\n\n    const targets = [0, 0.5, 1, 1.5, 2];\n    const previousScale = [...targets]\n      .reverse()\n      .find((target) => scale > target);\n\n    if (previousScale === 1) setTranslate({ x: 0, y: 0 });\n\n    previousScale && setScale(previousScale);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scale]);\n\n  return { zoomIn, zoomOut };\n};\n","import { useEffect, useRef, useState } from 'react';\n\nimport { isHotkey } from '@udecode/plate-common/server';\n\nimport {\n  imagePreviewActions,\n  useImagePreviewSelectors,\n} from '../image-preview-store';\n\nexport const useScaleInputState = () => {\n  const scale = useImagePreviewSelectors().scale();\n  const setScale = imagePreviewActions.scale;\n\n  const isEditingScale = useImagePreviewSelectors().isEditingScale();\n  const setIsEditingScale = imagePreviewActions.isEditingScale;\n\n  const [value, setValue] = useState(scale * 100 + '');\n  const inputRef = useRef<HTMLInputElement>();\n\n  return {\n    inputRef,\n    isEditingScale,\n    setIsEditingScale,\n    setScale,\n    setValue,\n    value,\n  };\n};\n\nexport const useScaleInput = ({\n  inputRef,\n  isEditingScale,\n  setIsEditingScale,\n  setScale,\n  setValue,\n  value,\n}: ReturnType<typeof useScaleInputState>) => {\n  useEffect(() => {\n    if (!isEditingScale) return;\n\n    setTimeout(() => {\n      inputRef.current?.focus();\n      inputRef.current?.select();\n    }, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEditingScale]);\n\n  return {\n    props: {\n      onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value);\n      },\n      onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (isHotkey('enter')(e)) {\n          if (Number(value) <= 50) {\n            setScale(0.5);\n            setIsEditingScale(false);\n\n            return;\n          }\n          if (Number(value) >= 200) {\n            setScale(2);\n            setIsEditingScale(false);\n\n            return;\n          }\n\n          setScale(Number((Number(value) / 100).toFixed(2)));\n          setIsEditingScale(false);\n        }\n      },\n      value: value,\n    },\n    ref: inputRef,\n  };\n};\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { isHotkey, useEditorRef } from '@udecode/plate-common';\n\nimport {\n  imagePreviewActions,\n  useImagePreviewSelectors,\n} from '../image-preview-store';\nimport { useZoom } from './useZoom';\n\nexport const useImagePreviewState = ({\n  scrollSpeed,\n}: {\n  scrollSpeed: number;\n}) => {\n  const editor = useEditorRef();\n  const isOpen = useImagePreviewSelectors().isOpen(editor.id);\n  const scale = useImagePreviewSelectors().scale();\n  const translate = useImagePreviewSelectors().translate();\n  const setTranslate = imagePreviewActions.translate;\n  const boundingClientRect = useImagePreviewSelectors().boundingClientRect();\n  const currentPreview = useImagePreviewSelectors().currentPreview();\n  const setCurrentPreView = imagePreviewActions.currentPreview;\n  const previewList = useImagePreviewSelectors().previewList();\n  const isEditingScale = useImagePreviewSelectors().isEditingScale();\n  const setIsEditingScale = imagePreviewActions.isEditingScale;\n\n  return {\n    boundingClientRect,\n    currentPreview,\n    editor,\n    isEditingScale,\n    isOpen,\n    previewList,\n    scale,\n    scrollSpeed,\n    setCurrentPreView,\n    setIsEditingScale,\n    setTranslate,\n    translate,\n  };\n};\n\nexport const useImagePreview = ({\n  boundingClientRect,\n  currentPreview,\n  isOpen,\n  previewList,\n  scale,\n  scrollSpeed,\n  setCurrentPreView,\n  setIsEditingScale,\n  setTranslate,\n  translate,\n}: ReturnType<typeof useImagePreviewState>) => {\n  // zoom in/out and move image\n  useEffect(() => {\n    const wheel = (e: WheelEvent) => {\n      if (scale <= 1) return;\n\n      const { deltaX, deltaY } = e;\n      const { x, y } = translate;\n\n      const { bottom, left, right, top } = boundingClientRect;\n\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      let leftOffset = x - deltaX / scrollSpeed;\n      let topOffset = y - deltaY / scrollSpeed;\n\n      // Check horizontal scroll boundaries\n      if (left - deltaX / scrollSpeed > windowWidth / 2 && deltaX < 0) {\n        leftOffset = x;\n      }\n      if (right - deltaX / scrollSpeed < windowWidth / 2 && deltaX > 0) {\n        leftOffset = x;\n      }\n      // Check the vertical scroll boundary\n      if (top - deltaY / scrollSpeed > windowHeight / 2 && deltaY < 0) {\n        topOffset = y;\n      }\n      if (bottom - deltaY / scrollSpeed < windowHeight / 2 && deltaY > 0) {\n        topOffset = y;\n      }\n\n      setTranslate({\n        x: leftOffset,\n        y: topOffset,\n      });\n    };\n\n    if (!isOpen) return document.removeEventListener('wheel', wheel);\n\n    document.addEventListener('wheel', wheel);\n\n    return () => {\n      document.removeEventListener('wheel', wheel);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, translate, scale]);\n\n  const { zoomIn, zoomOut } = useZoom();\n\n  const currentPreviewIndex = useMemo(() => {\n    if (!currentPreview) return null;\n\n    return previewList.findIndex(\n      (item) => item.url === currentPreview.url && item.id === currentPreview.id\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPreview]);\n\n  const onClose = useCallback(() => {\n    imagePreviewActions.close();\n    document.documentElement.style.overflowY = 'scroll';\n  }, []);\n\n  const [prevDisabled, nextDisabled] = useMemo(\n    () => [\n      currentPreviewIndex === 0,\n      currentPreviewIndex === previewList.length - 1,\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentPreviewIndex]\n  );\n\n  const [zoomOutDisabled, zoomInDisabled] = useMemo(\n    () => [scale <= 0.5, scale >= 2],\n    [scale]\n  );\n\n  useEffect(() => {\n    const keydown = (e: KeyboardEvent) => {\n      if (isHotkey('escape')(e)) {\n        e.stopPropagation();\n        onClose();\n      }\n    };\n\n    if (!isOpen) return document.removeEventListener('keydown', keydown);\n\n    document.addEventListener('keydown', keydown);\n\n    return () => {\n      document.removeEventListener('keydown', keydown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return {\n    closeProps: {\n      onClick: () => onClose(),\n    },\n    currentUrlIndex: currentPreviewIndex,\n    maskLayerProps: {\n      onClick: () => onClose(),\n    },\n    nextDisabled,\n    nextProps: {\n      disabled: nextDisabled,\n      onClick: () => {\n        if (typeof currentPreviewIndex !== 'number') return;\n\n        setCurrentPreView(previewList[currentPreviewIndex + 1]);\n      },\n    },\n    prevDisabled,\n    prevProps: {\n      disabled: prevDisabled,\n      onClick: () => {\n        if (typeof currentPreviewIndex !== 'number') return;\n\n        setCurrentPreView(previewList[currentPreviewIndex - 1]);\n      },\n    },\n    scaleTextProps: {\n      onClick: () => setIsEditingScale(true),\n    },\n    zommOutProps: {\n      disabled: zoomOutDisabled,\n      onClick: () => zoomOut(),\n    },\n    zoomInDisabled,\n    zoomInProps: {\n      disabled: zoomInDisabled,\n      onClick: () => zoomIn(),\n    },\n    zoomOutDisabled,\n  };\n};\n","import {\n  type InsertNodesOptions,\n  type PlateEditor,\n  type Value,\n  getPluginType,\n} from '@udecode/plate-common/server';\n\nimport {\n  ELEMENT_IMAGE,\n  ELEMENT_MEDIA_EMBED,\n  insertImage,\n  insertMediaEmbed,\n} from '..';\n\nexport interface InsertMediaOptions<V extends Value>\n  extends InsertNodesOptions<V> {\n  /**\n   * Default onClick is getting the image url by calling this promise before\n   * inserting the image.\n   */\n  getUrl?: () => Promise<string>;\n\n  type?: string;\n}\n\nexport const insertMedia = async <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    getUrl,\n    type = getPluginType(editor, ELEMENT_IMAGE),\n    ...options\n  }: InsertMediaOptions<V> = {}\n) => {\n  const url = getUrl\n    ? await getUrl()\n    : window.prompt(\n        `Enter the URL of the ${\n          type === ELEMENT_IMAGE ? ELEMENT_IMAGE : ELEMENT_MEDIA_EMBED\n        }`\n      );\n\n  if (!url) return;\n  if (type === getPluginType(editor, ELEMENT_IMAGE)) {\n    insertImage(editor, url, options);\n  } else {\n    insertMediaEmbed(editor, { url }, options);\n  }\n};\n","import { createAtomStore } from '@udecode/plate-common';\n\ninterface MediaStore {\n  showCaption: boolean;\n}\n\nexport const { MediaProvider, mediaStore, useMediaStore } = createAtomStore(\n  {\n    showCaption: false,\n  } as MediaStore,\n  { name: 'media' }\n);\n","import type { TElement } from '@udecode/plate-common';\n\nexport interface TMediaElement extends TElement {\n  url: string;\n  align?: 'center' | 'left' | 'right';\n  id?: string;\n  isUpload?: boolean;\n  name?: string;\n}\n\nexport interface MediaPlugin {\n  isUrl?: (text: string) => boolean;\n\n  /** Transforms the url. */\n  transformUrl?: (url: string) => string;\n}\n\nexport const ELEMENT_MEDIA = 'media';\n","import React from 'react';\n\nimport { useElement } from '@udecode/plate-common';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport type { TMediaElement } from './types';\n\nimport { ELEMENT_MEDIA_EMBED, VIDEO_PROVIDERS } from '../media-embed';\nimport { ELEMENT_VIDEO } from '../video';\n\nexport type EmbedUrlData = {\n  id?: string;\n  provider?: string;\n  url?: string;\n};\n\nexport type EmbedUrlParser = (url: string) => EmbedUrlData | undefined;\n\n// Unlike the link plugin, there's no legitimate reason for non-HTTP source URLs\nconst allowedProtocols = new Set(['https:', 'http:']);\n\nexport const parseMediaUrl = (\n  url: string,\n  {\n    urlParsers,\n  }: {\n    urlParsers: EmbedUrlParser[];\n  }\n): EmbedUrlData | undefined => {\n  const embed = (() => {\n    for (const parser of urlParsers) {\n      const data = parser(url);\n\n      if (data) {\n        return data;\n      }\n    }\n  })();\n\n  // Harden against XSS\n  if (embed?.url) {\n    try {\n      const { protocol } = new URL(embed.url);\n\n      if (!allowedProtocols.has(protocol)) {\n        return undefined;\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.warn('Could not parse URL: ' + embed.url);\n\n      return undefined;\n    }\n  }\n\n  return embed;\n};\n\nexport const useMediaState = ({\n  urlParsers,\n}: {\n  urlParsers?: EmbedUrlParser[];\n} = {}) => {\n  const element = useElement<TMediaElement>();\n  const focused = useFocused();\n  const selected = useSelected();\n  const readOnly = useReadOnly();\n\n  const { align, id, isUpload, name, type, url } = element;\n\n  const embed = React.useMemo(() => {\n    if (!urlParsers || (type !== ELEMENT_VIDEO && type !== ELEMENT_MEDIA_EMBED))\n      return;\n\n    return parseMediaUrl(url, { urlParsers });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [urlParsers, url]);\n\n  const isTweet = embed?.provider === 'twitter';\n  const isVideo = !!embed?.provider && VIDEO_PROVIDERS.includes(embed.provider);\n  const isYoutube = embed?.provider === 'youtube';\n\n  return {\n    align,\n    embed,\n    focused,\n    id,\n    isTweet,\n    isUpload,\n    isVideo,\n    isYoutube,\n    name,\n    readOnly,\n    selected,\n    unsafeUrl: url,\n  };\n};\n","import { createPluginFactory } from '@udecode/plate-common/server';\n\nimport type { MediaPlugin } from '../media/index';\n\nimport { parseIframeUrl } from './parseIframeUrl';\n\nexport const ELEMENT_MEDIA_EMBED = 'media_embed';\n\n/**\n * Enables support for embeddable media such as YouTube or Vimeo videos,\n * Instagram posts and tweets or Google Maps.\n */\nexport const createMediaEmbedPlugin = createPluginFactory<MediaPlugin>({\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_MEDIA_EMBED,\n  options: {\n    transformUrl: parseIframeUrl,\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (el: HTMLElement) => {\n        const url = el.getAttribute('src');\n\n        if (url) {\n          return {\n            type,\n            url,\n          };\n        }\n      },\n      rules: [\n        {\n          validNodeName: 'IFRAME',\n        },\n      ],\n    },\n  }),\n});\n","export const parseIframeUrl = (url: string) => {\n  // if not starting with http, assume pasting of full iframe embed code\n  if (!url.startsWith('http')) {\n    const regexMatchSrc = /src=\".*?\"/;\n    const regexGroupQuotes = /\"([^\"]*)\"/;\n\n    const src = url.match(regexMatchSrc)?.[0];\n    const returnString = src?.match(regexGroupQuotes)?.[1];\n\n    if (returnString) {\n      url = returnString;\n    }\n  }\n\n  return url;\n};\n","import type { EmbedUrlData } from '../media';\n\nconst twitterRegex =\n  // eslint-disable-next-line regexp/no-unused-capturing-group\n  /^https?:\\/\\/(?:twitter|x)\\.com\\/(?:#!\\/)?(\\w+)\\/status(es)?\\/(?<id>\\d+)/;\n\nexport const parseTwitterUrl = (url: string): EmbedUrlData | undefined => {\n  if (url.match(twitterRegex)) {\n    return {\n      id: twitterRegex.exec(url)?.groups?.id,\n      provider: 'twitter',\n      url,\n    };\n  }\n};\n","import { isUrl } from '@udecode/plate-common/server';\nimport videoParser from 'js-video-url-parser';\n\nimport type { EmbedUrlData } from '../media';\n\nconst YOUTUBE_PREFIX = 'https://www.youtube.com/embed/';\nconst VIMEO_PREFIX = 'https://player.vimeo.com/video/';\nconst DAILYMOTION_PREFIX = 'https://www.dailymotion.com/embed/video/';\nconst YOUKU_PREFIX = 'https://player.youku.com/embed/';\nconst COUB_PREFIX = 'https://coub.com/embed/';\n\nexport const VIDEO_PROVIDERS = [\n  'youtube',\n  'vimeo',\n  'dailymotion',\n  'youku',\n  'coub',\n];\n\nexport const parseVideoUrl = (url: string): EmbedUrlData | undefined => {\n  if (!isUrl(url)) return;\n\n  const videoData = videoParser.parse(url);\n\n  if (videoData?.provider && videoData.id) {\n    const { id, provider } = videoData;\n\n    const providerUrls: Record<string, string> = {\n      coub: `${COUB_PREFIX}${id}`,\n      dailymotion: `${DAILYMOTION_PREFIX}${id}`,\n      vimeo: `${VIMEO_PREFIX}${id}`,\n      youku: `${YOUKU_PREFIX}${id}`,\n      youtube: `${YOUTUBE_PREFIX}${id}`,\n    };\n\n    return {\n      id,\n      provider,\n      url: providerUrls[provider],\n    };\n  }\n};\n","import {\n  type InsertNodesOptions,\n  type PlateEditor,\n  type PlatePluginKey,\n  type Value,\n  getParentNode,\n  insertNodes,\n} from '@udecode/plate-common/server';\n\nimport type { TMediaEmbedElement } from '../types';\n\nimport { ELEMENT_MEDIA_EMBED } from '../createMediaEmbedPlugin';\n\nexport const insertMediaEmbed = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    key = ELEMENT_MEDIA_EMBED,\n    url = '',\n  }: Partial<TMediaEmbedElement> & PlatePluginKey,\n  options: InsertNodesOptions<V> = {}\n): void => {\n  if (!editor.selection) return;\n\n  const selectionParentEntry = getParentNode(editor, editor.selection);\n\n  if (!selectionParentEntry) return;\n\n  const [, path] = selectionParentEntry;\n  insertNodes<TMediaEmbedElement>(\n    editor,\n    {\n      children: [{ text: '' }],\n      type: key,\n      url,\n    },\n    {\n      at: path,\n      nextBlock: true,\n      ...(options as any),\n    }\n  );\n};\n","import { createPluginFactory } from '@udecode/plate-common';\n\nimport type { VideoPlugin } from './types';\n\nexport const ELEMENT_VIDEO = 'video';\n\nexport const createVideoPlugin = createPluginFactory<VideoPlugin>({\n  dangerouslyAllowAttributes: ['width', 'height'],\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_VIDEO,\n});\n","import { useEditorRef } from '@udecode/plate-common';\n\nimport { insertMedia } from './insertMedia';\n\nexport const useMediaToolbarButton = ({\n  nodeType,\n}: { nodeType?: string } = {}) => {\n  const editor = useEditorRef();\n\n  return {\n    props: {\n      onClick: async () => {\n        await insertMedia(editor, { type: nodeType });\n      },\n      onMouseDown: (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n      },\n    },\n  };\n};\n","import React from 'react';\n\nimport { createPrimitiveComponent, useElement } from '@udecode/plate-common';\n\nimport type { TMediaElement } from '../types';\n\nimport { floatingMediaActions } from './floatingMediaStore';\n\nexport const useFloatingMediaEditButton = () => {\n  const element = useElement<TMediaElement>();\n\n  return {\n    props: {\n      onClick: React.useCallback(() => {\n        floatingMediaActions.url(element.url);\n        floatingMediaActions.isEditing(true);\n      }, [element.url]),\n    },\n  };\n};\n\nexport const FloatingMediaEditButton = createPrimitiveComponent('button')({\n  propsHook: useFloatingMediaEditButton,\n});\n","import { createZustandStore } from '@udecode/plate-common/server';\n\nexport const floatingMediaStore = createZustandStore('floatingMedia')({\n  isEditing: false,\n  url: '',\n}).extendActions((set) => ({\n  reset: () => {\n    set.url('');\n    set.isEditing(false);\n  },\n}));\n\nexport const floatingMediaActions = floatingMediaStore.set;\n\nexport const floatingMediaSelectors = floatingMediaStore.get;\n\nexport const useFloatingMediaSelectors = () => floatingMediaStore.use;\n","import React from 'react';\n\nimport {\n  createPrimitiveComponent,\n  focusEditor,\n  useEditorRef,\n  useElement,\n  useHotkeys,\n} from '@udecode/plate-common';\n\nimport type { TMediaElement } from '../types';\n\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\nimport { submitFloatingMedia } from './submitFloatingMedia';\n\nexport const useFloatingMediaUrlInputState = ({\n  pluginKey,\n}: {\n  pluginKey?: string;\n} = {}) => {\n  const editor = useEditorRef();\n  const element = useElement<TMediaElement>();\n\n  useHotkeys(\n    'enter',\n    (e) => {\n      if (submitFloatingMedia(editor, { element, pluginKey })) {\n        e.preventDefault();\n      }\n    },\n    {\n      enableOnFormTags: ['INPUT'],\n    },\n    []\n  );\n\n  useHotkeys(\n    'escape',\n    () => {\n      if (floatingMediaSelectors.isEditing()) {\n        floatingMediaActions.reset();\n        focusEditor(editor, editor.selection!);\n      }\n    },\n    {\n      enableOnContentEditable: true,\n      enableOnFormTags: ['INPUT'],\n    },\n    []\n  );\n\n  return {\n    defaultValue: floatingMediaSelectors.url(),\n  };\n};\n\nexport const useFloatingMediaUrlInput = ({\n  defaultValue,\n}: ReturnType<typeof useFloatingMediaUrlInputState>) => {\n  const onChange: React.ChangeEventHandler<HTMLInputElement> =\n    React.useCallback((e) => {\n      floatingMediaActions.url(e.target.value);\n    }, []);\n\n  return {\n    props: {\n      autoFocus: true,\n      defaultValue,\n      onChange,\n    },\n  };\n};\n\nexport const FloatingMediaUrlInput = createPrimitiveComponent('input')({\n  propsHook: useFloatingMediaUrlInput,\n  stateHook: useFloatingMediaUrlInputState,\n});\n","import { focusEditor } from '@udecode/plate-common';\nimport {\n  type PlateEditor,\n  type Value,\n  getPluginOptions,\n  isUrl,\n  setNodes,\n} from '@udecode/plate-common/server';\n\nimport { ELEMENT_MEDIA, type MediaPlugin, type TMediaElement } from '../types';\nimport {\n  floatingMediaActions,\n  floatingMediaSelectors,\n} from './floatingMediaStore';\n\nexport const submitFloatingMedia = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    element,\n    pluginKey = ELEMENT_MEDIA,\n  }: {\n    element: TMediaElement;\n    pluginKey?: string;\n  }\n) => {\n  let url = floatingMediaSelectors.url();\n\n  if (url === element.url) {\n    floatingMediaActions.reset();\n\n    return true;\n  }\n\n  const { isUrl: _isUrl = isUrl, transformUrl } = getPluginOptions<\n    MediaPlugin,\n    V\n  >(editor, pluginKey);\n  const isValid = _isUrl(url);\n\n  if (!isValid) return;\n  if (transformUrl) {\n    url = transformUrl(url);\n  }\n\n  setNodes<TMediaElement>(editor, {\n    url,\n  });\n\n  floatingMediaActions.reset();\n\n  focusEditor(editor, editor.selection!);\n\n  return true;\n};\n","import { FloatingMediaEditButton } from './FloatingMediaEditButton';\nimport { FloatingMediaUrlInput } from './FloatingMediaUrlInput';\n\nexport const FloatingMedia = {\n  EditButton: FloatingMediaEditButton,\n  UrlInput: FloatingMediaUrlInput,\n};\n","import React from 'react';\n\nexport const useMediaControllerState = () => {\n  const [alignOpen, setAlignOpen] = React.useState(false);\n\n  return {\n    alignOpen,\n    setAlignOpen,\n  };\n};\n\nexport const useMediaController = ({\n  setAlignOpen,\n}: ReturnType<typeof useMediaControllerState>) => {\n  return {\n    MediaControllerDropDownMenuProps: {\n      setAlignOpen: setAlignOpen,\n    },\n  };\n};\n\nexport const useMediaControllerDropDownMenu = (props: {\n  openState: {\n    onOpenChange: (_value?: boolean) => void;\n    open: boolean;\n  };\n  setAlignOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  React.useEffect(\n    () => props.setAlignOpen(props.openState.open),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.openState.open]\n  );\n};\n","import {\n  blurEditor,\n  createPluginFactory,\n  isHotkey,\n} from '@udecode/plate-common';\n\nimport type { MediaPlaceholder } from './types';\n\nexport const ELEMENT_PLACEHOLDER = 'placeholder';\n\nexport const createPlaceholderPlugin = createPluginFactory<MediaPlaceholder>({\n  handlers: {\n    onKeyDown: (editor) => (event) => {\n      if (isHotkey('escape')(event)) {\n        blurEditor(editor);\n      }\n    },\n  },\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_PLACEHOLDER,\n});\n","import { createAtomStore } from '@udecode/plate-common';\n\ntype progresses = Record<string, number>;\ninterface placeholderStore {\n  isUploading: boolean;\n  progresses: progresses;\n  updatedFiles: File[];\n}\n\nexport const { PlaceholderProvider, placeholderStore, usePlaceholderStore } =\n  createAtomStore(\n    {\n      isUploading: false,\n      progresses: {},\n      updatedFiles: [],\n    } as placeholderStore,\n    { name: 'placeholder' }\n  );\n","import { useEditorRef, useElement } from '@udecode/plate-common';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport type { TPlaceholderElement } from '../types';\n\nimport { ELEMENT_PLACEHOLDER } from '../createPlaceholderPlugin';\nimport { usePlaceholderStore } from '../placeholderStore';\n\nexport const usePlaceholderElementState = () => {\n  const element = useElement();\n  const editor = useEditorRef();\n  const focused = useFocused();\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n\n  const progresses = usePlaceholderStore().get.progresses();\n  const isUploading = usePlaceholderStore().get.isUploading();\n  const updatedFiles = usePlaceholderStore().get.updatedFiles();\n\n  const { mediaType } = useElement<TPlaceholderElement>(ELEMENT_PLACEHOLDER);\n\n  const progressing = updatedFiles.length > 0 && isUploading;\n\n  return {\n    editor,\n    element,\n    focused,\n    isUploading,\n    mediaType,\n    progresses,\n    progressing,\n    readOnly,\n    selected,\n    updatedFiles,\n  };\n};\n","import {\n  isSelectionExpanded,\n  useEditorRef,\n  useEditorSelector,\n  useElement,\n} from '@udecode/plate-common';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport type { TPlaceholderElement } from '../types';\n\nimport { ELEMENT_PLACEHOLDER } from '../createPlaceholderPlugin';\nimport { usePlaceholderStore } from '../placeholderStore';\n\nexport const usePlaceholderPopoverState = () => {\n  const editor = useEditorRef();\n  const readOnly = useReadOnly();\n  const selected = useSelected();\n  const focused = useFocused();\n\n  const selectionCollapsed = useEditorSelector(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (editor) => !isSelectionExpanded(editor),\n    []\n  );\n\n  const element = useElement<TPlaceholderElement>(ELEMENT_PLACEHOLDER);\n  const { id, mediaType } = element;\n\n  const setProgresses = usePlaceholderStore().set.progresses();\n  const setIsUploading = usePlaceholderStore().set.isUploading();\n  const setUpdatedFiles = usePlaceholderStore().set.updatedFiles();\n\n  return {\n    editor,\n    element,\n    focused,\n    id,\n    mediaType,\n    readOnly,\n    selected,\n    selectionCollapsed,\n    setIsUploading,\n    setProgresses,\n    setUpdatedFiles,\n  };\n};\n","import {\n  type InsertNodesOptions,\n  type PlateEditor,\n  type Value,\n  insertNodes,\n  withoutNormalizing,\n} from '@udecode/plate-common';\n\nimport type { TPlaceholderElement } from '../types';\n\nimport { ELEMENT_AUDIO } from '../../audio';\nimport { ELEMENT_FILE } from '../../file';\nimport { ELEMENT_IMAGE } from '../../image';\nimport { ELEMENT_VIDEO } from '../../video';\nimport { ELEMENT_PLACEHOLDER } from '../createPlaceholderPlugin';\n\nexport const insertPlaceHolder = <V extends Value>(\n  editor: PlateEditor<V>,\n  mediaType: string,\n  options?: InsertNodesOptions<V>\n) => {\n  withoutNormalizing(editor, () =>\n    insertNodes<TPlaceholderElement>(\n      editor,\n      {\n        children: [{ text: '' }],\n        mediaType,\n        type: ELEMENT_PLACEHOLDER,\n      },\n      options as any\n    )\n  );\n};\n\nexport const insertImagePlaceholder = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: InsertNodesOptions<V>\n) => insertPlaceHolder(editor, ELEMENT_IMAGE, options);\n\nexport const insertVideoPlaceholder = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: InsertNodesOptions<V>\n) => insertPlaceHolder(editor, ELEMENT_VIDEO, options);\n\nexport const insertAudioPlaceholder = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: InsertNodesOptions<V>\n) => insertPlaceHolder(editor, ELEMENT_AUDIO, options);\n\nexport const insertFilePlaceholder = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: InsertNodesOptions<V>\n) => insertPlaceHolder(editor, ELEMENT_FILE, options);\n","import {\n  type PlateEditor,\n  type SetNodesOptions,\n  setNodes,\n} from '@udecode/plate-common';\n\ntype props = {\n  isUpload?: boolean;\n  name?: string;\n  type: string;\n  url: string;\n  width?: number;\n};\n\nexport const setMediaNode = (\n  editor: PlateEditor,\n  props: props,\n  options?: SetNodesOptions\n) => setNodes(editor, props, options);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,2BAA2B;AAI7B,IAAM,gBAAgB;AAEtB,IAAM,oBAAoB,oBAAiC;AAAA,EAChE,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;;;ACVD,SAAS,uBAAAA,4BAA2B;AAI7B,IAAM,eAAe;AAErB,IAAM,mBAAmBA,qBAAgC;AAAA,EAC9D,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;;;ACVD,SAAS,uBAAAC,4BAA2B;;;ACApC;AAAA,EAIE;AAAA,EACA;AAAA,OACK;AAMA,IAAM,cAAc,CACzB,QACA,KACA,UAAiC,CAAC,MAC/B;AACH,QAAM,OAAO,EAAE,MAAM,GAAG;AACxB,QAAM,QAAuB;AAAA,IAC3B,UAAU,CAAC,IAAI;AAAA,IACf,MAAM,cAAc,QAAQ,aAAa;AAAA,IACzC;AAAA,EACF;AACA,cAA2B,QAAQ,OAAO;AAAA,IACxC,WAAW;AAAA,KACP,QACL;AACH;;;AC3BA,SAAS,aAAa;AAEtB,IAAM,kBAAkB,oBAAI,IAAI;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,IAAM,aAAa,CAAC,QAAgB;AACzC,MAAI,CAAC,MAAM,GAAG;AAAG,WAAO;AAExB,QAAM,MAAM,IAAI,IAAI,GAAG,EAAE,SAAS,MAAM,GAAG,EAAE,IAAI;AAEjD,SAAO,gBAAgB,IAAI,GAAG;AAChC;;;ACvHO,IAAM,iBAAiB,CAI5B,QACA,YACG;AACH,QAAM,EAAE,WAAW,IAAI;AAEvB,SAAO,aAAa,CAAC,iBAA+B;AAClD,UAAM,OAAO,aAAa,QAAQ,YAAY;AAE9C,QAAI,WAAW,IAAI,GAAG;AACpB,kBAAY,QAAQ,IAAI;AAExB;AAAA,IACF;AAEA,eAAW,YAAY;AAAA,EACzB;AAEA,SAAO;AACT;;;AClCA;AAAA,EAIE;AAAA,EACA;AAAA,OACK;AAUA,IAAM,kBAAkB,CAI7B,QACA,WACG;AACH,QAAM;AAAA,IACJ,SAAS,EAAE,YAAY;AAAA,EACzB,IAAI;AACJ,QAAM,EAAE,WAAW,IAAI;AAEvB,SAAO,aAAa,CAAC,iBAA+B;AAClD,UAAM,OAAO,aAAa,QAAQ,YAAY;AAC9C,UAAM,EAAE,MAAM,IAAI;AAElB,QAAI,CAAC,QAAQ,SAAS,MAAM,SAAS,GAAG;AACtC,YAAM,kBAAkB,mBAA6B,QAAQ,MAAM;AAEnE,UACE,CAAC,oBAA8B,iBAAiB;AAAA,QAC9C,MAAM;AAAA,QACN;AAAA,MACF,CAAC,GACD;AACA,eAAO,WAAW,YAAY;AAAA,MAChC;AAEA,iBAAW,QAAQ,OAAO;AACxB,cAAM,SAAS,IAAI,WAAW;AAC9B,cAAM,CAAC,IAAI,IAAI,KAAK,KAAK,MAAM,GAAG;AAElC,YAAI,SAAS,SAAS;AACpB,iBAAO,iBAAiB,QAAQ,YAAY;AAC1C,gBAAI,CAAC,OAAO,QAAQ;AAClB;AAAA,YACF;AAEA,kBAAM,cAAc,cAChB,MAAM,YAAY,OAAO,MAAM,IAC/B,OAAO;AAEX,wBAAY,QAAQ,WAAW;AAAA,UACjC,CAAC;AAED,iBAAO,cAAc,IAAI;AAAA,QAC3B;AAAA,MACF;AAAA,IACF,OAAO;AACL,iBAAW,YAAY;AAAA,IACzB;AAAA,EACF;AAEA,SAAO;AACT;;;ACvDO,IAAM,YAAY,CAIvB,QACA,WACG;AACH,QAAM;AAAA,IACJ,SAAS,EAAE,oBAAoB,oBAAoB;AAAA,EACrD,IAAI;AAEJ,MAAI,CAAC,qBAAqB;AACxB,aAAS,gBAAgB,QAAQ,MAAM;AAAA,EACzC;AACA,MAAI,CAAC,oBAAoB;AACvB,aAAS,eAAe,QAAQ,MAAM;AAAA,EACxC;AAEA,SAAO;AACT;;;AL5BO,IAAM,gBAAgB;AAGtB,IAAM,oBAAoBC,qBAAiC;AAAA,EAChE,4BAA4B,CAAC,OAAO,SAAS,QAAQ;AAAA,EACrD,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,MAAM,CAAC,QAAQ,EAAE,KAAK,OAAO;AAAA,IAC3B,iBAAiB;AAAA,MACf,SAAS,CAAC,QAAQ;AAAA,QAChB;AAAA,QACA,KAAK,GAAG,aAAa,KAAK;AAAA,MAC5B;AAAA,MACA,OAAO;AAAA,QACL;AAAA,UACE,eAAe;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,eAAe;AACjB,CAAC;;;AM5BD,SAAS,0BAA0B;AAO5B,IAAM,oBAAoB,mBAAmB,cAAc,EAAE;AAAA,EAClE,oBAAoB,CAAC;AAAA,EACrB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,aAAa,CAAC;AAAA,EACd,OAAO;AAAA,EACP,WAAW,EAAE,GAAG,GAAG,GAAG,EAAE;AAC1B,CAAC,EACE,cAAc,CAAC,SAAS;AAAA,EACvB,OAAO,MAAM;AACX,QAAI,eAAe,IAAI;AACvB,QAAI,YAAY,CAAC,CAAC;AAClB,QAAI,aAAa,IAAI;AACrB,QAAI,MAAM,CAAC;AACX,QAAI,UAAU,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AAC5B,QAAI,eAAe,KAAK;AAAA,EAC1B;AACF,EAAE,EACD,gBAAgB,CAAC,WAAW;AAAA,EAC3B,QAAQ,CAAC,aAAqB,MAAM,iBAAiB;AACvD,EAAE;AAEG,IAAM,sBAAsB,kBAAkB;AAE9C,IAAM,wBAAwB,kBAAkB;AAEhD,IAAM,2BAA2B,MAAM,kBAAkB;;;AClChE;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;;;ACJP,SAA2B,sBAAsB;AAOjD,IAAM,aAAa,CAAC,WAAwB;AAC1C,QAAM,SAAS,eAAe,QAAQ;AAAA,IACpC,IAAI,CAAC;AAAA,IACL,OAAO,CAAC,MAAM,EAAE,SAAS;AAAA,EAC3B,CAAC;AAED,SAAO,MAAM,KAAK,QAAQ,CAAC,UAAU;AAAA,IACnC,IAAI,KAAK,CAAC,EAAE;AAAA,IACZ,KAAK,KAAK,CAAC,EAAE;AAAA,EACf,EAAE;AACJ;AAEO,IAAM,mBAAmB,CAC9B,QACA,YACG;AACH,QAAM,EAAE,IAAI,IAAI,IAAI;AACpB,QAAM,UAAU,WAAW,MAAM;AACjC,WAAS,gBAAgB,MAAM,YAAY;AAC3C,sBAAoB,aAAa,OAAO,EAAE;AAC1C,sBAAoB,eAAe,EAAE,IAAI,IAAI,CAAC;AAC9C,sBAAoB,YAAY,OAAO;AACzC;;;ADnBO,IAAM,WAAW,MAAM;AAC5B,QAAM,UAAU,WAA0B;AAC1C,QAAM,SAAS,aAAa;AAE5B,SAAO;AAAA,IACL,OAAO;AAAA,MACL,WAAW;AAAA,MACX,sBAAsB,MAAM;AAC1B,yBAAiB,QAAQ,OAAO;AAAA,MAClC;AAAA,MACA,KAAK,QAAQ;AAAA,IACf;AAAA,EACF;AACF;AAEO,IAAM,QAAQ,yBAAyB,KAAK,EAAE;AAAA,EACnD,WAAW;AACb,CAAC;;;AE3BD,OAAO,SAAS,WAAW,eAAe;AAE1C,SAAS,4BAAAC,iCAAgC;;;ACFzC,SAAS,mBAAmB;AAOrB,IAAM,UAAU,MAAM;AAC3B,QAAM,QAAQ,yBAAyB,EAAE,MAAM;AAC/C,QAAM,WAAW,oBAAoB;AACrC,QAAM,eAAe,oBAAoB;AAEzC,QAAM,SAAS,YAAY,MAAM;AAC/B,QAAI,SAAS;AAAG;AAEhB,UAAM,UAAU,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;AAClC,UAAM,YAAY,QAAQ,KAAK,CAAC,WAAW,QAAQ,MAAM;AAEzD,iBAAa,SAAS,SAAS;AAAA,EAEjC,GAAG,CAAC,KAAK,CAAC;AAEV,QAAM,UAAU,YAAY,MAAM;AAChC,QAAI,SAAS;AAAG;AAEhB,UAAM,UAAU,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;AAClC,UAAM,gBAAgB,CAAC,GAAG,OAAO,EAC9B,QAAQ,EACR,KAAK,CAAC,WAAW,QAAQ,MAAM;AAElC,QAAI,kBAAkB;AAAG,mBAAa,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AAEpD,qBAAiB,SAAS,aAAa;AAAA,EAEzC,GAAG,CAAC,KAAK,CAAC;AAEV,SAAO,EAAE,QAAQ,QAAQ;AAC3B;;;AD3BO,IAAM,uBAAuB,MAAM;AACxC,QAAM,iBAAiB,yBAAyB,EAAE,eAAe;AACjE,QAAM,YAAY,yBAAyB,EAAE,UAAU;AACvD,QAAM,QAAQ,yBAAyB,EAAE,MAAM;AAC/C,QAAM,WAAW,MAAM,OAAyB,IAAI;AACpD,QAAM,wBAAwB,oBAAoB;AAElD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA+C;AAC7C,QAAM,WAAW,QAAQ,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC;AAElD,QAAM,EAAE,QAAQ,QAAQ,IAAI,QAAQ;AAEpC,YAAU,MAAM;AArClB;AAsCI,QAAI,SAAS;AAAG;AAEhB,UAAM,sBAAqB,cAAS,YAAT,mBAAkB;AAE7C,QAAI,CAAC;AAAoB;AAEzB,0BAAsB,kBAAkB;AAAA,EAG1C,GAAG,CAAC,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;AAEpC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,WAAW;AAAA,MACX,SAAS,CAAC,MAAuD;AAC/D,UAAE,gBAAgB;AAClB,mBAAW,OAAO,IAAI,QAAQ;AAAA,MAChC;AAAA,MACA,KAAK;AAAA,MACL,KAAK,iDAAgB;AAAA,MACrB,OAAO;AAAA,QACL,QAAQ,WAAW,YAAY;AAAA,QAC/B,WAAW,SAAS,KAAK,eAAe,UAAU,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI;AAAA,MACnF;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,eAAeC,0BAAyB,KAAK,EAAE;AAAA,EAC1D,WAAW;AAAA,EACX,WAAW;AACb,CAAC;;;AErED,SAAS,aAAAC,YAAW,QAAQ,gBAAgB;AAE5C,SAAS,gBAAgB;AAOlB,IAAM,qBAAqB,MAAM;AACtC,QAAM,QAAQ,yBAAyB,EAAE,MAAM;AAC/C,QAAM,WAAW,oBAAoB;AAErC,QAAM,iBAAiB,yBAAyB,EAAE,eAAe;AACjE,QAAM,oBAAoB,oBAAoB;AAE9C,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,QAAQ,MAAM,EAAE;AACnD,QAAM,WAAW,OAAyB;AAE1C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,gBAAgB,CAAC;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA6C;AAC3C,EAAAC,WAAU,MAAM;AACd,QAAI,CAAC;AAAgB;AAErB,eAAW,MAAM;AAxCrB;AAyCM,qBAAS,YAAT,mBAAkB;AAClB,qBAAS,YAAT,mBAAkB;AAAA,IACpB,GAAG,CAAC;AAAA,EAEN,GAAG,CAAC,cAAc,CAAC;AAEnB,SAAO;AAAA,IACL,OAAO;AAAA,MACL,UAAU,CAAC,MAA2C;AACpD,iBAAS,EAAE,OAAO,KAAK;AAAA,MACzB;AAAA,MACA,WAAW,CAAC,MAA6C;AACvD,YAAI,SAAS,OAAO,EAAE,CAAC,GAAG;AACxB,cAAI,OAAO,KAAK,KAAK,IAAI;AACvB,qBAAS,GAAG;AACZ,8BAAkB,KAAK;AAEvB;AAAA,UACF;AACA,cAAI,OAAO,KAAK,KAAK,KAAK;AACxB,qBAAS,CAAC;AACV,8BAAkB,KAAK;AAEvB;AAAA,UACF;AAEA,mBAAS,QAAQ,OAAO,KAAK,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;AACjD,4BAAkB,KAAK;AAAA,QACzB;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,IACA,KAAK;AAAA,EACP;AACF;;;AC3EA,SAAS,eAAAC,cAAa,aAAAC,YAAW,WAAAC,gBAAe;AAEhD,SAAS,YAAAC,WAAU,gBAAAC,qBAAoB;AAQhC,IAAM,uBAAuB,CAAC;AAAA,EACnC;AACF,MAEM;AACJ,QAAM,SAASC,cAAa;AAC5B,QAAM,SAAS,yBAAyB,EAAE,OAAO,OAAO,EAAE;AAC1D,QAAM,QAAQ,yBAAyB,EAAE,MAAM;AAC/C,QAAM,YAAY,yBAAyB,EAAE,UAAU;AACvD,QAAM,eAAe,oBAAoB;AACzC,QAAM,qBAAqB,yBAAyB,EAAE,mBAAmB;AACzE,QAAM,iBAAiB,yBAAyB,EAAE,eAAe;AACjE,QAAM,oBAAoB,oBAAoB;AAC9C,QAAM,cAAc,yBAAyB,EAAE,YAAY;AAC3D,QAAM,iBAAiB,yBAAyB,EAAE,eAAe;AACjE,QAAM,oBAAoB,oBAAoB;AAE9C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA+C;AAE7C,EAAAC,WAAU,MAAM;AACd,UAAM,QAAQ,CAAC,MAAkB;AAC/B,UAAI,SAAS;AAAG;AAEhB,YAAM,EAAE,QAAQ,OAAO,IAAI;AAC3B,YAAM,EAAE,GAAG,EAAE,IAAI;AAEjB,YAAM,EAAE,QAAQ,MAAM,OAAO,IAAI,IAAI;AAErC,YAAM,cAAc,OAAO;AAC3B,YAAM,eAAe,OAAO;AAE5B,UAAI,aAAa,IAAI,SAAS;AAC9B,UAAI,YAAY,IAAI,SAAS;AAG7B,UAAI,OAAO,SAAS,cAAc,cAAc,KAAK,SAAS,GAAG;AAC/D,qBAAa;AAAA,MACf;AACA,UAAI,QAAQ,SAAS,cAAc,cAAc,KAAK,SAAS,GAAG;AAChE,qBAAa;AAAA,MACf;AAEA,UAAI,MAAM,SAAS,cAAc,eAAe,KAAK,SAAS,GAAG;AAC/D,oBAAY;AAAA,MACd;AACA,UAAI,SAAS,SAAS,cAAc,eAAe,KAAK,SAAS,GAAG;AAClE,oBAAY;AAAA,MACd;AAEA,mBAAa;AAAA,QACX,GAAG;AAAA,QACH,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAEA,QAAI,CAAC;AAAQ,aAAO,SAAS,oBAAoB,SAAS,KAAK;AAE/D,aAAS,iBAAiB,SAAS,KAAK;AAExC,WAAO,MAAM;AACX,eAAS,oBAAoB,SAAS,KAAK;AAAA,IAC7C;AAAA,EAEF,GAAG,CAAC,QAAQ,WAAW,KAAK,CAAC;AAE7B,QAAM,EAAE,QAAQ,QAAQ,IAAI,QAAQ;AAEpC,QAAM,sBAAsBC,SAAQ,MAAM;AACxC,QAAI,CAAC;AAAgB,aAAO;AAE5B,WAAO,YAAY;AAAA,MACjB,CAAC,SAAS,KAAK,QAAQ,eAAe,OAAO,KAAK,OAAO,eAAe;AAAA,IAC1E;AAAA,EAEF,GAAG,CAAC,cAAc,CAAC;AAEnB,QAAM,UAAUC,aAAY,MAAM;AAChC,wBAAoB,MAAM;AAC1B,aAAS,gBAAgB,MAAM,YAAY;AAAA,EAC7C,GAAG,CAAC,CAAC;AAEL,QAAM,CAAC,cAAc,YAAY,IAAID;AAAA,IACnC,MAAM;AAAA,MACJ,wBAAwB;AAAA,MACxB,wBAAwB,YAAY,SAAS;AAAA,IAC/C;AAAA;AAAA,IAEA,CAAC,mBAAmB;AAAA,EACtB;AAEA,QAAM,CAAC,iBAAiB,cAAc,IAAIA;AAAA,IACxC,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC;AAAA,IAC/B,CAAC,KAAK;AAAA,EACR;AAEA,EAAAD,WAAU,MAAM;AACd,UAAM,UAAU,CAAC,MAAqB;AACpC,UAAIG,UAAS,QAAQ,EAAE,CAAC,GAAG;AACzB,UAAE,gBAAgB;AAClB,gBAAQ;AAAA,MACV;AAAA,IACF;AAEA,QAAI,CAAC;AAAQ,aAAO,SAAS,oBAAoB,WAAW,OAAO;AAEnE,aAAS,iBAAiB,WAAW,OAAO;AAE5C,WAAO,MAAM;AACX,eAAS,oBAAoB,WAAW,OAAO;AAAA,IACjD;AAAA,EAEF,GAAG,CAAC,MAAM,CAAC;AAEX,SAAO;AAAA,IACL,YAAY;AAAA,MACV,SAAS,MAAM,QAAQ;AAAA,IACzB;AAAA,IACA,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,MACd,SAAS,MAAM,QAAQ;AAAA,IACzB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACT,UAAU;AAAA,MACV,SAAS,MAAM;AACb,YAAI,OAAO,wBAAwB;AAAU;AAE7C,0BAAkB,YAAY,sBAAsB,CAAC,CAAC;AAAA,MACxD;AAAA,IACF;AAAA,IACA;AAAA,IACA,WAAW;AAAA,MACT,UAAU;AAAA,MACV,SAAS,MAAM;AACb,YAAI,OAAO,wBAAwB;AAAU;AAE7C,0BAAkB,YAAY,sBAAsB,CAAC,CAAC;AAAA,MACxD;AAAA,IACF;AAAA,IACA,gBAAgB;AAAA,MACd,SAAS,MAAM,kBAAkB,IAAI;AAAA,IACvC;AAAA,IACA,cAAc;AAAA,MACZ,UAAU;AAAA,MACV,SAAS,MAAM,QAAQ;AAAA,IACzB;AAAA,IACA;AAAA,IACA,aAAa;AAAA,MACX,UAAU;AAAA,MACV,SAAS,MAAM,OAAO;AAAA,IACxB;AAAA,IACA;AAAA,EACF;AACF;;;AC9LA;AAAA,EAIE,iBAAAC;AAAA,OACK;AAoBA,IAAM,cAAc,OACzB,QACA,KAI2B,CAAC,MACzB;AALH,eACE;AAAA;AAAA,IACA,OAAOC,eAAc,QAAQ,aAAa;AAAA,EA7B9C,IA2BE,IAGK,oBAHL,IAGK;AAAA,IAFH;AAAA,IACA;AAAA;AAIF,QAAM,MAAM,SACR,MAAM,OAAO,IACb,OAAO;AAAA,IACL,wBACE,SAAS,gBAAgB,gBAAgB,mBAC3C;AAAA,EACF;AAEJ,MAAI,CAAC;AAAK;AACV,MAAI,SAASA,eAAc,QAAQ,aAAa,GAAG;AACjD,gBAAY,QAAQ,KAAK,OAAO;AAAA,EAClC,OAAO;AACL,qBAAiB,QAAQ,EAAE,IAAI,GAAG,OAAO;AAAA,EAC3C;AACF;;;AC/CA,SAAS,uBAAuB;AAMzB,IAAM,EAAE,eAAe,YAAY,cAAc,IAAI;AAAA,EAC1D;AAAA,IACE,aAAa;AAAA,EACf;AAAA,EACA,EAAE,MAAM,QAAQ;AAClB;;;ACMO,IAAM,gBAAgB;;;ACjB7B,OAAOC,YAAW;AAElB,SAAS,cAAAC,mBAAkB;AAC3B,SAAS,YAAY,aAAa,mBAAmB;;;ACHrD,SAAS,uBAAAC,4BAA2B;;;ACA7B,IAAM,iBAAiB,CAAC,QAAgB;AAA/C;AAEE,MAAI,CAAC,IAAI,WAAW,MAAM,GAAG;AAC3B,UAAM,gBAAgB;AACtB,UAAM,mBAAmB;AAEzB,UAAM,OAAM,SAAI,MAAM,aAAa,MAAvB,mBAA2B;AACvC,UAAM,gBAAe,gCAAK,MAAM,sBAAX,mBAA+B;AAEpD,QAAI,cAAc;AAChB,YAAM;AAAA,IACR;AAAA,EACF;AAEA,SAAO;AACT;;;ADTO,IAAM,sBAAsB;AAM5B,IAAM,yBAAyBC,qBAAiC;AAAA,EACrE,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,SAAS;AAAA,IACP,cAAc;AAAA,EAChB;AAAA,EACA,MAAM,CAAC,QAAQ,EAAE,KAAK,OAAO;AAAA,IAC3B,iBAAiB;AAAA,MACf,SAAS,CAAC,OAAoB;AAC5B,cAAM,MAAM,GAAG,aAAa,KAAK;AAEjC,YAAI,KAAK;AACP,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL;AAAA,UACE,eAAe;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AEpCD,IAAM;AAAA;AAAA,EAEJ,WAAC,kFAAwE;AAAA;AAEpE,IAAM,kBAAkB,CAAC,QAA0C;AAN1E;AAOE,MAAI,IAAI,MAAM,YAAY,GAAG;AAC3B,WAAO;AAAA,MACL,KAAI,wBAAa,KAAK,GAAG,MAArB,mBAAwB,WAAxB,mBAAgC;AAAA,MACpC,UAAU;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF;;;ACdA,SAAS,SAAAC,cAAa;AACtB,OAAO,iBAAiB;AAIxB,IAAM,iBAAiB;AACvB,IAAM,eAAe;AACrB,IAAM,qBAAqB;AAC3B,IAAM,eAAe;AACrB,IAAM,cAAc;AAEb,IAAM,kBAAkB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,IAAM,gBAAgB,CAAC,QAA0C;AACtE,MAAI,CAACA,OAAM,GAAG;AAAG;AAEjB,QAAM,YAAY,YAAY,MAAM,GAAG;AAEvC,OAAI,uCAAW,aAAY,UAAU,IAAI;AACvC,UAAM,EAAE,IAAI,SAAS,IAAI;AAEzB,UAAM,eAAuC;AAAA,MAC3C,MAAM,GAAG,WAAW,GAAG,EAAE;AAAA,MACzB,aAAa,GAAG,kBAAkB,GAAG,EAAE;AAAA,MACvC,OAAO,GAAG,YAAY,GAAG,EAAE;AAAA,MAC3B,OAAO,GAAG,YAAY,GAAG,EAAE;AAAA,MAC3B,SAAS,GAAG,cAAc,GAAG,EAAE;AAAA,IACjC;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,KAAK,aAAa,QAAQ;AAAA,IAC5B;AAAA,EACF;AACF;;;ACzCA;AAAA,EAKE;AAAA,EACA,eAAAC;AAAA,OACK;AAMA,IAAM,mBAAmB,CAC9B,QACA;AAAA,EACE,MAAM;AAAA,EACN,MAAM;AACR,GACA,UAAiC,CAAC,MACzB;AACT,MAAI,CAAC,OAAO;AAAW;AAEvB,QAAM,uBAAuB,cAAc,QAAQ,OAAO,SAAS;AAEnE,MAAI,CAAC;AAAsB;AAE3B,QAAM,CAAC,EAAE,IAAI,IAAI;AACjB,EAAAC;AAAA,IACE;AAAA,IACA;AAAA,MACE,UAAU,CAAC,EAAE,MAAM,GAAG,CAAC;AAAA,MACvB,MAAM;AAAA,MACN;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,WAAW;AAAA,OACP;AAAA,EAER;AACF;;;ACzCA,SAAS,uBAAAC,4BAA2B;AAI7B,IAAM,gBAAgB;AAEtB,IAAM,oBAAoBA,qBAAiC;AAAA,EAChE,4BAA4B,CAAC,SAAS,QAAQ;AAAA,EAC9C,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;;;ANQD,IAAM,mBAAmB,oBAAI,IAAI,CAAC,UAAU,OAAO,CAAC;AAE7C,IAAM,gBAAgB,CAC3B,KACA;AAAA,EACE;AACF,MAG6B;AAC7B,QAAM,SAAS,MAAM;AACnB,eAAW,UAAU,YAAY;AAC/B,YAAM,OAAO,OAAO,GAAG;AAEvB,UAAI,MAAM;AACR,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF,GAAG;AAGH,MAAI,+BAAO,KAAK;AACd,QAAI;AACF,YAAM,EAAE,SAAS,IAAI,IAAI,IAAI,MAAM,GAAG;AAEtC,UAAI,CAAC,iBAAiB,IAAI,QAAQ,GAAG;AACnC,eAAO;AAAA,MACT;AAAA,IACF,SAAQ;AAEN,cAAQ,KAAK,0BAA0B,MAAM,GAAG;AAEhD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAEO,IAAM,gBAAgB,CAAC;AAAA,EAC5B;AACF,IAEI,CAAC,MAAM;AACT,QAAM,UAAUC,YAA0B;AAC1C,QAAM,UAAU,WAAW;AAC3B,QAAM,WAAW,YAAY;AAC7B,QAAM,WAAW,YAAY;AAE7B,QAAM,EAAE,OAAO,IAAI,UAAU,MAAM,MAAM,IAAI,IAAI;AAEjD,QAAM,QAAQC,OAAM,QAAQ,MAAM;AAChC,QAAI,CAAC,cAAe,SAAS,iBAAiB,SAAS;AACrD;AAEF,WAAO,cAAc,KAAK,EAAE,WAAW,CAAC;AAAA,EAE1C,GAAG,CAAC,YAAY,GAAG,CAAC;AAEpB,QAAM,WAAU,+BAAO,cAAa;AACpC,QAAM,UAAU,CAAC,EAAC,+BAAO,aAAY,gBAAgB,SAAS,MAAM,QAAQ;AAC5E,QAAM,aAAY,+BAAO,cAAa;AAEtC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AACF;;;AOhGA,SAAS,gBAAAC,qBAAoB;AAItB,IAAM,wBAAwB,CAAC;AAAA,EACpC;AACF,IAA2B,CAAC,MAAM;AAChC,QAAM,SAASC,cAAa;AAE5B,SAAO;AAAA,IACL,OAAO;AAAA,MACL,SAAS,YAAY;AACnB,cAAM,YAAY,QAAQ,EAAE,MAAM,SAAS,CAAC;AAAA,MAC9C;AAAA,MACA,aAAa,CAAC,MAA2C;AACvD,UAAE,eAAe;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AACF;;;ACnBA,OAAOC,YAAW;AAElB,SAAS,4BAAAC,2BAA0B,cAAAC,mBAAkB;;;ACFrD,SAAS,sBAAAC,2BAA0B;AAE5B,IAAM,qBAAqBA,oBAAmB,eAAe,EAAE;AAAA,EACpE,WAAW;AAAA,EACX,KAAK;AACP,CAAC,EAAE,cAAc,CAAC,SAAS;AAAA,EACzB,OAAO,MAAM;AACX,QAAI,IAAI,EAAE;AACV,QAAI,UAAU,KAAK;AAAA,EACrB;AACF,EAAE;AAEK,IAAM,uBAAuB,mBAAmB;AAEhD,IAAM,yBAAyB,mBAAmB;AAElD,IAAM,4BAA4B,MAAM,mBAAmB;;;ADR3D,IAAM,6BAA6B,MAAM;AAC9C,QAAM,UAAUC,YAA0B;AAE1C,SAAO;AAAA,IACL,OAAO;AAAA,MACL,SAASC,OAAM,YAAY,MAAM;AAC/B,6BAAqB,IAAI,QAAQ,GAAG;AACpC,6BAAqB,UAAU,IAAI;AAAA,MACrC,GAAG,CAAC,QAAQ,GAAG,CAAC;AAAA,IAClB;AAAA,EACF;AACF;AAEO,IAAM,0BAA0BC,0BAAyB,QAAQ,EAAE;AAAA,EACxE,WAAW;AACb,CAAC;;;AEvBD,OAAOC,YAAW;AAElB;AAAA,EACE,4BAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,cAAAC;AAAA,EACA;AAAA,OACK;;;ACRP,SAAS,mBAAmB;AAC5B;AAAA,EAGE;AAAA,EACA,SAAAC;AAAA,EACA;AAAA,OACK;AAQA,IAAM,sBAAsB,CACjC,QACA;AAAA,EACE;AAAA,EACA,YAAY;AACd,MAIG;AACH,MAAI,MAAM,uBAAuB,IAAI;AAErC,MAAI,QAAQ,QAAQ,KAAK;AACvB,yBAAqB,MAAM;AAE3B,WAAO;AAAA,EACT;AAEA,QAAM,EAAE,OAAO,SAASC,QAAO,aAAa,IAAI,iBAG9C,QAAQ,SAAS;AACnB,QAAM,UAAU,OAAO,GAAG;AAE1B,MAAI,CAAC;AAAS;AACd,MAAI,cAAc;AAChB,UAAM,aAAa,GAAG;AAAA,EACxB;AAEA,WAAwB,QAAQ;AAAA,IAC9B;AAAA,EACF,CAAC;AAED,uBAAqB,MAAM;AAE3B,cAAY,QAAQ,OAAO,SAAU;AAErC,SAAO;AACT;;;ADnCO,IAAM,gCAAgC,CAAC;AAAA,EAC5C;AACF,IAEI,CAAC,MAAM;AACT,QAAM,SAASC,cAAa;AAC5B,QAAM,UAAUC,YAA0B;AAE1C;AAAA,IACE;AAAA,IACA,CAAC,MAAM;AACL,UAAI,oBAAoB,QAAQ,EAAE,SAAS,UAAU,CAAC,GAAG;AACvD,UAAE,eAAe;AAAA,MACnB;AAAA,IACF;AAAA,IACA;AAAA,MACE,kBAAkB,CAAC,OAAO;AAAA,IAC5B;AAAA,IACA,CAAC;AAAA,EACH;AAEA;AAAA,IACE;AAAA,IACA,MAAM;AACJ,UAAI,uBAAuB,UAAU,GAAG;AACtC,6BAAqB,MAAM;AAC3B,QAAAC,aAAY,QAAQ,OAAO,SAAU;AAAA,MACvC;AAAA,IACF;AAAA,IACA;AAAA,MACE,yBAAyB;AAAA,MACzB,kBAAkB,CAAC,OAAO;AAAA,IAC5B;AAAA,IACA,CAAC;AAAA,EACH;AAEA,SAAO;AAAA,IACL,cAAc,uBAAuB,IAAI;AAAA,EAC3C;AACF;AAEO,IAAM,2BAA2B,CAAC;AAAA,EACvC;AACF,MAAwD;AACtD,QAAM,WACJC,OAAM,YAAY,CAAC,MAAM;AACvB,yBAAqB,IAAI,EAAE,OAAO,KAAK;AAAA,EACzC,GAAG,CAAC,CAAC;AAEP,SAAO;AAAA,IACL,OAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,wBAAwBC,0BAAyB,OAAO,EAAE;AAAA,EACrE,WAAW;AAAA,EACX,WAAW;AACb,CAAC;;;AE5EM,IAAM,gBAAgB;AAAA,EAC3B,YAAY;AAAA,EACZ,UAAU;AACZ;;;ACNA,OAAOC,YAAW;AAEX,IAAM,0BAA0B,MAAM;AAC3C,QAAM,CAAC,WAAW,YAAY,IAAIA,OAAM,SAAS,KAAK;AAEtD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,qBAAqB,CAAC;AAAA,EACjC;AACF,MAAkD;AAChD,SAAO;AAAA,IACL,kCAAkC;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,iCAAiC,CAAC,UAMzC;AACJ,EAAAA,OAAM;AAAA,IACJ,MAAM,MAAM,aAAa,MAAM,UAAU,IAAI;AAAA;AAAA,IAE7C,CAAC,MAAM,UAAU,IAAI;AAAA,EACvB;AACF;;;ACjCA;AAAA,EACE;AAAA,EACA,uBAAAC;AAAA,EACA,YAAAC;AAAA,OACK;AAIA,IAAM,sBAAsB;AAE5B,IAAM,0BAA0BD,qBAAsC;AAAA,EAC3E,UAAU;AAAA,IACR,WAAW,CAAC,WAAW,CAAC,UAAU;AAChC,UAAIC,UAAS,QAAQ,EAAE,KAAK,GAAG;AAC7B,mBAAW,MAAM;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;;;ACrBD,SAAS,mBAAAC,wBAAuB;AASzB,IAAM,EAAE,qBAAqB,kBAAkB,oBAAoB,IACxEA;AAAA,EACE;AAAA,IACE,aAAa;AAAA,IACb,YAAY,CAAC;AAAA,IACb,cAAc,CAAC;AAAA,EACjB;AAAA,EACA,EAAE,MAAM,cAAc;AACxB;;;ACjBF,SAAS,gBAAAC,eAAc,cAAAC,mBAAkB;AACzC,SAAS,cAAAC,aAAY,eAAAC,cAAa,eAAAC,oBAAmB;AAO9C,IAAM,6BAA6B,MAAM;AAC9C,QAAM,UAAUC,YAAW;AAC3B,QAAM,SAASC,cAAa;AAC5B,QAAM,UAAUC,YAAW;AAC3B,QAAM,WAAWC,aAAY;AAC7B,QAAM,WAAWC,aAAY;AAE7B,QAAM,aAAa,oBAAoB,EAAE,IAAI,WAAW;AACxD,QAAM,cAAc,oBAAoB,EAAE,IAAI,YAAY;AAC1D,QAAM,eAAe,oBAAoB,EAAE,IAAI,aAAa;AAE5D,QAAM,EAAE,UAAU,IAAIJ,YAAgC,mBAAmB;AAEzE,QAAM,cAAc,aAAa,SAAS,KAAK;AAE/C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;ACnCA;AAAA,EACE;AAAA,EACA,gBAAAK;AAAA,EACA;AAAA,EACA,cAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,eAAAC,cAAa,eAAAC,oBAAmB;AAO9C,IAAM,6BAA6B,MAAM;AAC9C,QAAM,SAASC,cAAa;AAC5B,QAAM,WAAWC,aAAY;AAC7B,QAAM,WAAWC,aAAY;AAC7B,QAAM,UAAUC,YAAW;AAE3B,QAAM,qBAAqB;AAAA;AAAA,IAEzB,CAACC,YAAW,CAAC,oBAAoBA,OAAM;AAAA,IACvC,CAAC;AAAA,EACH;AAEA,QAAM,UAAUC,YAAgC,mBAAmB;AACnE,QAAM,EAAE,IAAI,UAAU,IAAI;AAE1B,QAAM,gBAAgB,oBAAoB,EAAE,IAAI,WAAW;AAC3D,QAAM,iBAAiB,oBAAoB,EAAE,IAAI,YAAY;AAC7D,QAAM,kBAAkB,oBAAoB,EAAE,IAAI,aAAa;AAE/D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;AC7CA;AAAA,EAIE,eAAAC;AAAA,EACA;AAAA,OACK;AAUA,IAAM,oBAAoB,CAC/B,QACA,WACA,YACG;AACH;AAAA,IAAmB;AAAA,IAAQ,MACzBC;AAAA,MACE;AAAA,MACA;AAAA,QACE,UAAU,CAAC,EAAE,MAAM,GAAG,CAAC;AAAA,QACvB;AAAA,QACA,MAAM;AAAA,MACR;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,yBAAyB,CACpC,QACA,YACG,kBAAkB,QAAQ,eAAe,OAAO;AAE9C,IAAM,yBAAyB,CACpC,QACA,YACG,kBAAkB,QAAQ,eAAe,OAAO;AAE9C,IAAM,yBAAyB,CACpC,QACA,YACG,kBAAkB,QAAQ,eAAe,OAAO;AAE9C,IAAM,wBAAwB,CACnC,QACA,YACG,kBAAkB,QAAQ,cAAc,OAAO;;;ACpDpD;AAAA,EAGE,YAAAC;AAAA,OACK;AAUA,IAAM,eAAe,CAC1B,QACA,OACA,YACGA,UAAS,QAAQ,OAAO,OAAO;","names":["createPluginFactory","createPluginFactory","createPluginFactory","createPrimitiveComponent","createPrimitiveComponent","useEffect","useEffect","useCallback","useEffect","useMemo","isHotkey","useEditorRef","useEditorRef","useEffect","useMemo","useCallback","isHotkey","getPluginType","getPluginType","React","useElement","createPluginFactory","createPluginFactory","isUrl","insertNodes","insertNodes","createPluginFactory","useElement","React","useEditorRef","useEditorRef","React","createPrimitiveComponent","useElement","createZustandStore","useElement","React","createPrimitiveComponent","React","createPrimitiveComponent","focusEditor","useEditorRef","useElement","isUrl","isUrl","useEditorRef","useElement","focusEditor","React","createPrimitiveComponent","React","createPluginFactory","isHotkey","createAtomStore","useEditorRef","useElement","useFocused","useReadOnly","useSelected","useElement","useEditorRef","useFocused","useReadOnly","useSelected","useEditorRef","useElement","useFocused","useReadOnly","useSelected","useEditorRef","useReadOnly","useSelected","useFocused","editor","useElement","insertNodes","insertNodes","setNodes"]}